import json
import os
import logging

# --- Configuration ---
# Set up logging
logging.basicConfig(
    level=logging.INFO, format="%(asctime)s - %(levelname)s - %(message)s"
)
logger = logging.getLogger(__name__)

# Define input and output file paths
# Assumes the script is run from the 'tfm' workspace root
INPUT_JSON_FILE = "mistral/evaluate-dataset/final_golden_chunk_dataset_100.json"
OUTPUT_LATEX_FILE = "mistral/evaluate-dataset/appendix_questions.tex"


def escape_latex(text: str) -> str:
    """
    Escapes special LaTeX characters in a given string.
    """
    if not isinstance(text, str):
        return ""

    # Mapping of special characters to their LaTeX-escaped equivalent
    special_chars = {
        "&": r"\\&",
        "%": r"\\%",
        "$": r"\\$",
        "#": r"\\#",
        "_": r"\\_",
        "{": r"\\{",
        "}": r"\\}",
        "~": r"\\textasciitilde{}",
        "^": r"\\textasciicircum{}",
        "\\": r"\\textbackslash{}",
    }

    # Iterate through the special characters and replace them
    for char, escaped_char in special_chars.items():
        text = text.replace(char, escaped_char)

    return text


def generate_latex_list_from_json(input_file: str, output_file: str):
    """
    Reads a JSON file containing questions and generates a compact LaTeX
    itemized list.

    Args:
        input_file (str): Path to the input JSON file.
        output_file (str): Path to the output .tex file.
    """
    logger.info(f"Reading questions from: {input_file}")

    try:
        with open(input_file, "r", encoding="utf-8") as f:
            data = json.load(f)
    except FileNotFoundError:
        logger.error(f"Error: Input file not found at {input_file}")
        return
    except json.JSONDecodeError:
        logger.error(f"Error: Could not decode JSON from {input_file}")
        return

    questions = data.get("questions", [])
    if not questions:
        logger.warning("No questions found in the JSON file.")
        return

    logger.info(f"Found {len(questions)} questions to process.")

    # Start building the LaTeX string
    # We use the enumitem package for the [noitemsep] option to remove vertical spacing.
    # The user should ensure they have \usepackage{enumitem} in their main LaTeX document.
    latex_output = [
        "% Generated by questions-to-latex.py",
        r"% Add \usepackage{enumitem} to your LaTeX preamble for this to work correctly.",
        r"\begin{itemize}[noitemsep]",
    ]

    # Add each question as an item in the list
    for item in questions:
        question_text = item.get("question", "")
        if question_text:
            escaped_question = escape_latex(question_text)
            latex_output.append(f"    \\item {escaped_question}")

    latex_output.append(r"\end{itemize}")

    # Write the LaTeX string to the output file
    try:
        output_dir = os.path.dirname(output_file)
        if output_dir:
            os.makedirs(output_dir, exist_ok=True)

        with open(output_file, "w", encoding="utf-8") as f:
            f.write("\n".join(latex_output))
        logger.info(f"Successfully generated LaTeX file at: {output_file}")
    except IOError as e:
        logger.error(f"Error writing to output file {output_file}: {e}")


if __name__ == "__main__":
    generate_latex_list_from_json(INPUT_JSON_FILE, OUTPUT_LATEX_FILE)
