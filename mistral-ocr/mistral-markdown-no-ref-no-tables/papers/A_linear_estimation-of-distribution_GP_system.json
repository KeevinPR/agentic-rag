{
  "metadata": {
    "file_path": "/Users/id05309/Documents/tfm/mistral/mistral-markdown/2008/A linear estimation-of-distribution GP system.md",
    "filename": "A linear estimation-of-distribution GP system.md",
    "title": "A linear estimation-of-distribution GP system",
    "year": "2008"
  },
  "references": {
    "header": "# References",
    "content": "1. Abbass, H., Hoai, N., McKay, R.: AntTAG: A new method to compose computer programs using colonies of ants. In: IEEE Congress on Evolutionary Computation (2002)\n2. Baluja, S., Caruana, R.: Removing the genetics from the standard genetic algorithm. In: Prieditis, A., Russell, S. (eds.) Machine Learning: Proceedings of the Twelfth International Conference, pp. 38-46. Morgan Kaufmann Publishers, San Francisco (1995)\n3. Koza, J.R.: Genetic Programming II: Automatic Discovery of Reusable Programs. MIT Press, Cambridge (1994)\n4. Larrañaga, P., Lozano, J.A.: Estimation of Distribution Algorithms, A New Tool for Evolutionary Computation. Kluwer Academic Publishers, Dordrecht (2002)\n5. Manning, C., Schütze, H.: Foundations of statistical natural language processing. MIT Press, Cambridge (1999)\n6. Mühlenbein, H., Mahnig, T.: Convergence theory and application of the factorized distribution algorithm. Journal of Computing and Information Technology 7(1), 19-32 (1999)\n7. Nordin, P.: A compiling genetic programming system that directly manipulates the machine code. In: Kinnear Jr, K.E. (ed.) K, ch. 14, pp. 311-331. MIT Press, Cambridge (1994)\n8. Poli, R., McPhee, N.F.: A linear estimation-of-distribution GP system. Tech. Report CES479, Dept. of Computing and Electronic Systems, University of Essex (January 2008)\n9. Rabiner, L.: A tutorial on hidden Markov models and selected applications in speech recognition. Proceedings of the IEEE 77(2), 257-286 (1989)\n10. Ratle, A., Sebag, M.: Avoiding the bloat with probabilistic grammar-guided genetic programming. In: Collet, P., Fonlupt, C., Hao, J.-K., Lutton, E., Schoenauer, M. (eds.) EA 2001. LNCS, vol. 2310, pp. 255-266. Springer, Heidelberg (2002)\n11. Salustowicz, R.P., Schmidhuber, J.: Probabilistic incremental program evolution. Evolutionary Computation 5(2), 123-141 (1997)\n12. Sastry, K., Goldberg, D.E.: Probabilistic model building and competent genetic programming. In: Riolo, R.L., Worzel, B. (eds.) Genetic Programming Theory and Practise, ch. 13, pp. 205-220. Kluwer, Dordrecht (2003)\n13. Shan, Y., McKay, R.I., Abbass, H.A., Essam, D.: Program evolution with explicit learning: a new framework for program automatic synthesis. In: Sarker, R., Reynolds, R., Abbass, H., Tan, K.C., McKay, B., Essam, D., Gedeon, T. (eds.) Proceedings of the 2003 Congress on Evolutionary Computation CEC 2003, Canberra, December 2003, pp. 1639-1646. IEEE Press, Los Alamitos (2003)\n14. Shan, Y., McKay, R.I., Essam, D., Abbass, H.A.: A survey of probabilistic model building genetic programming. In: Pelikan, M., Sastry, K., Cantu-Paz, E. (eds.) Scalable Optimization via Probabilistic Modeling: From Algorithms to Applications, Springer, Heidelberg (2006)\n15. Suen, C.Y.: $n$-gram statistics for natural language understanding and text processing. IEEE Transactions on Pattern Analysis and Machine Intelligence 1(2), 164-172 (1979)\n16. Yanai, K., Iba, H.: Estimation of distribution programming based on bayesian network. In: Sarker, R., Reynolds, R., Abbass, H., Tan, K.C., McKay, B., Essam, D., Gedeon, T. (eds.) Proceedings of the 2003 Congress on Evolutionary Computation CEC 2003, pp. 1618-1625. IEEE Press, Los Alamitos (2003)\n17. Yanai, K., Iba, H.: Program evolution by integrating EDP and GP. In: Deb, K., et al. (eds.) GECCO 2004. LNCS, vol. 3102, pp. 774-785. Springer, Heidelberg (2004)",
    "references": [
      {
        "ref_id": "1",
        "text": "Abbass, H., Hoai, N., McKay, R.: AntTAG: A new method to compose computer programs using colonies of ants. In: IEEE Congress on Evolutionary Computation (2002)"
      },
      {
        "ref_id": "2",
        "text": "Baluja, S., Caruana, R.: Removing the genetics from the standard genetic algorithm. In: Prieditis, A., Russell, S. (eds.) Machine Learning: Proceedings of the Twelfth International Conference, pp. 38-46. Morgan Kaufmann Publishers, San Francisco (1995)"
      },
      {
        "ref_id": "3",
        "text": "Koza, J.R.: Genetic Programming II: Automatic Discovery of Reusable Programs. MIT Press, Cambridge (1994)"
      },
      {
        "ref_id": "4",
        "text": "Larrañaga, P., Lozano, J.A.: Estimation of Distribution Algorithms, A New Tool for Evolutionary Computation. Kluwer Academic Publishers, Dordrecht (2002)"
      },
      {
        "ref_id": "5",
        "text": "Manning, C., Schütze, H.: Foundations of statistical natural language processing. MIT Press, Cambridge (1999)"
      },
      {
        "ref_id": "6",
        "text": "Mühlenbein, H., Mahnig, T.: Convergence theory and application of the factorized distribution algorithm. Journal of Computing and Information Technology 7(1), 19-32 (1999)"
      },
      {
        "ref_id": "7",
        "text": "Nordin, P.: A compiling genetic programming system that directly manipulates the machine code. In: Kinnear Jr, K.E. (ed.) K, ch. 14, pp. 311-331. MIT Press, Cambridge (1994)"
      },
      {
        "ref_id": "8",
        "text": "Poli, R., McPhee, N.F.: A linear estimation-of-distribution GP system. Tech. Report CES479, Dept. of Computing and Electronic Systems, University of Essex (January 2008)"
      },
      {
        "ref_id": "9",
        "text": "Rabiner, L.: A tutorial on hidden Markov models and selected applications in speech recognition. Proceedings of the IEEE 77(2), 257-286 (1989)"
      },
      {
        "ref_id": "10",
        "text": "Ratle, A., Sebag, M.: Avoiding the bloat with probabilistic grammar-guided genetic programming. In: Collet, P., Fonlupt, C., Hao, J.-K., Lutton, E., Schoenauer, M. (eds.) EA 2001. LNCS, vol. 2310, pp. 255-266. Springer, Heidelberg (2002)"
      },
      {
        "ref_id": "11",
        "text": "Salustowicz, R.P., Schmidhuber, J.: Probabilistic incremental program evolution. Evolutionary Computation 5(2), 123-141 (1997)"
      },
      {
        "ref_id": "12",
        "text": "Sastry, K., Goldberg, D.E.: Probabilistic model building and competent genetic programming. In: Riolo, R.L., Worzel, B. (eds.) Genetic Programming Theory and Practise, ch. 13, pp. 205-220. Kluwer, Dordrecht (2003)"
      },
      {
        "ref_id": "13",
        "text": "Shan, Y., McKay, R.I., Abbass, H.A., Essam, D.: Program evolution with explicit learning: a new framework for program automatic synthesis. In: Sarker, R., Reynolds, R., Abbass, H., Tan, K.C., McKay, B., Essam, D., Gedeon, T. (eds.) Proceedings of the 2003 Congress on Evolutionary Computation CEC 2003, Canberra, December 2003, pp. 1639-1646. IEEE Press, Los Alamitos (2003)"
      },
      {
        "ref_id": "14",
        "text": "Shan, Y., McKay, R.I., Essam, D., Abbass, H.A.: A survey of probabilistic model building genetic programming. In: Pelikan, M., Sastry, K., Cantu-Paz, E. (eds.) Scalable Optimization via Probabilistic Modeling: From Algorithms to Applications, Springer, Heidelberg (2006)"
      },
      {
        "ref_id": "15",
        "text": "Suen, C.Y.: $n$-gram statistics for natural language understanding and text processing. IEEE Transactions on Pattern Analysis and Machine Intelligence 1(2), 164-172 (1979)"
      },
      {
        "ref_id": "16",
        "text": "Yanai, K., Iba, H.: Estimation of distribution programming based on bayesian network. In: Sarker, R., Reynolds, R., Abbass, H., Tan, K.C., McKay, B., Essam, D., Gedeon, T. (eds.) Proceedings of the 2003 Congress on Evolutionary Computation CEC 2003, pp. 1618-1625. IEEE Press, Los Alamitos (2003)"
      },
      {
        "ref_id": "17",
        "text": "Yanai, K., Iba, H.: Program evolution by integrating EDP and GP. In: Deb, K., et al. (eds.) GECCO 2004. LNCS, vol. 3102, pp. 774-785. Springer, Heidelberg (2004)"
      }
    ],
    "reference_count": 17,
    "pattern_matched": "(?:^|\\n)#+\\s*References?\\s*\\n"
  },
  "tables": [
    {
      "table_number": "1",
      "table_title": "Primitive sets used in our experiments (\\% represents protected division, which returns its first argument if the second argument is zero)",
      "headers": [
        "",
        "Polynomial",
        "",
        "Lawn"
      ],
      "rows": [
        [
          "ID",
          12,
          12,
          "Mower"
        ],
        [
          0,
          1,
          1,
          "Mow"
        ],
        [
          1,
          2,
          2,
          "Left"
        ],
        [
          2,
          112,
          112,
          "Right"
        ],
        [
          3,
          212,
          212,
          ""
        ],
        [
          4,
          112,
          112,
          ""
        ],
        [
          5,
          212,
          212,
          ""
        ],
        [
          6,
          12,
          12,
          ""
        ],
        [
          7,
          "",
          "R1 = R1 - R2",
          ""
        ],
        [
          8,
          "",
          "R2 = R1 - R2",
          ""
        ],
        [
          9,
          "",
          112,
          ""
        ],
        [
          10,
          "",
          212,
          ""
        ]
      ],
      "row_count": 12,
      "column_count": 4
    },
    {
      "table_number": "2",
      "table_title": "Parameter settings for hill-climber, linear GP and N-gram GP",
      "headers": [
        "Parameter",
        "Hill-Climber",
        "Linear GP",
        "N-gram GP"
      ],
      "rows": [
        [
          "Fitness evaluations",
          20000,
          20000,
          20000
        ],
        [
          "Independent runs",
          1000,
          1000,
          1000
        ],
        [
          "$\\ell_{\\max }$ Polynomial Problem",
          100,
          100,
          100
        ],
        [
          "Lawn-Mower",
          "$4 \\times d^{2}$",
          "$4 \\times d^{2}$",
          "$4 \\times d^{2}$"
        ],
        [
          "Point mutation rate (per primitive)",
          "$\\frac{2}{7}$",
          "$\\frac{1}{7}$",
          "$\\frac{0.25}{7}$"
        ],
        [
          "Population size",
          1,
          500,
          10
        ],
        [
          "Generations",
          20000,
          40,
          2000
        ],
        [
          "Crossover rate (per individual)",
          "$\\mathrm{n} / \\mathrm{a}$",
          0.9,
          "$\\mathrm{n} / \\mathrm{a}$"
        ],
        [
          "Mutation rate (per individual)",
          1,
          0.1,
          1
        ],
        [
          "Tournament size",
          "$\\mathrm{n} / \\mathrm{a}$",
          2,
          "$\\mathrm{n} / \\mathrm{a}$"
        ],
        [
          "Truncation selection ratio",
          "$\\mathrm{n} / \\mathrm{a}$",
          "$\\mathrm{n} / \\mathrm{a}$",
          5
        ],
        [
          "$\\eta_{M}$ learning rate",
          "$\\mathrm{n} / \\mathrm{a}$",
          "$\\mathrm{n} / \\mathrm{a}$",
          8
        ],
        [
          "$\\eta_{L}$ learning rate",
          "$\\mathrm{n} / \\mathrm{a}$",
          "$\\mathrm{n} / \\mathrm{a}$",
          0.075
        ]
      ],
      "row_count": 13,
      "column_count": 4
    }
  ]
}