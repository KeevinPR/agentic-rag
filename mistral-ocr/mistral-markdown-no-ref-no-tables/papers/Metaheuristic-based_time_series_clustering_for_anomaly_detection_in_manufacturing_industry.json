{
  "metadata": {
    "file_path": "/Users/id05309/Documents/tfm/mistral/mistral-markdown/2023/Metaheuristic-based time series clustering for anomaly detection in manufacturing industry.md",
    "filename": "Metaheuristic-based time series clustering for anomaly detection in manufacturing industry.md",
    "title": "Metaheuristic-based time series clustering for anomaly detection in manufacturing industry",
    "year": "2023"
  },
  "references": {
    "header": "## References",
    "content": "1. Bajgar M, Calligaris S, Calvino F, Criscuolo C, Timmis J (2019) Bits and bolts: The digital transformation and manufacturing. OECD Science, Technology and Industry Working Papers, 2019/01, OECD Publishing, Paris\n2. Manyika J, Chui M, Brown B, Bughin J, Dobbs R, Roxburgh C, Hung Byers A (2011) Big data: The next frontier for innovation, competition, and productivity. McKinsey Global Institute, Washington, District of Columbia\n3. Jones MD, Hutcheson S, Camba JD (2021) Past, present, and future barriers to digital transformation in manufacturing: A review. Journal of Manufacturing Systems 60:936-948\n4. Chen H, Chiang RH, Storey VC (2012) Business intelligence and analytics: From big data to big impact. MIS quarterly, 1165-1188\n5. Samek W, Wiegand T, Müller KR (2017) Explainable artificial intelligence: Understanding, visualizing and interpreting deep learning models. arXiv preprint arXiv:1708.08296\n6. Samek W, Müller KR (2019) Towards explainable artificial intelligence. Explainable AI: interpreting, explaining and visualizing deep learning. Springer, Cham, pp 5-22\n7. Aghabozorgi S, Shirkhorshidi AS, Wah TY (2015) Time-series clustering-a decade review. Information Systems 53:16-38\n8. Mehrmolaei S, Keyvanpour MR, Savagiv M (2020) Metaheuristics on time series clustering problem: Theoretical and empirical evaluation. Evolutionary Intelligence, 1-20\n9. Andreopoulos B, An A, Wang X, Schroeder M (2009) A roadmap of clustering algorithms: finding a match for a biomedical application. Briefings in Bioinformatics 10(3):297-314\n10. Liao TW (2005) Clustering of time series data-a survey. Pattern Recognition 38(11):1857-1874\n11. Leng M, Lai X, Tan G, Xu X (2009) Time series representation for anomaly detection. In 2009 2nd IEEE International Conference on Computer Science and Information Technology. IEEE, pp 628632\n12. Munir M, Siddiqui SA, Dengel A, Ahmed S (2018) DeepAnT: A deep learning approach for unsupervised anomaly detection in time series. Ieee Access 7:1991-2005\n13. Ismail Fawaz H, Forestier G, Weber J, Idoumghar L, Muller PA (2019) Deep learning for time series classification: a review. Data Mining and Knowledge Discovery 33(4):917-963\n14. Katoch S, Chauhan SS, Kumar V (2021) A review on genetic algorithm: past, present, and future. Multimedia Tools and Applications 80(5):8091-8126\n15. Dhiman G (2021) ESA: a hybrid bio-inspired metaheuristic optimization approach for engineering problems. Engineering with Computers 37(1):323-353\n16. David Edward G (1989) Genetic Algorithms in Search, Optimization, and Machine Learning. Addison-Wesley\n17. Holland JH (1992) Adaptation in natural and artificial systems: an introductory analysis with applications to biology, control, and artificial intelligence. MIT press\n18. Ahn CW (2006) Advances in evolutionary algorithms. SpringerVerlag, Berlin Heidelberg\n19. Kennedy J, Eberhart R (1995) Particle swarm optimization. In Proceedings of ICNN'95-international conference on neural networks , vol 4. IEEE, pp 1942-1948\n20. Eberhart RC, Shi Y (1998) Comparison between genetic algorithms and particle swarm optimization. International conference on evolutionary programming. Springer, Berlin, Heidelberg, pp 611-616\n21. Lee S, Soak S, Oh S, Pedrycz W, Jeon M (2008) Modified binary particle swarm optimization. Progress in Natural Science 18(9):1161-1166\n22. Khanesar MA, Teshnehlab M, Shoorehdeli MA (2007) A novel binary particle swarm optimization. In 2007 Mediterranean conference on control \\& automation . IEEE, pp 1-6\n23. Kennedy J, Eberhart RC (1997) A discrete binary version of the particle swarm algorithm. In 1997 IEEE International conference on systems, man, and cybernetics. Computational cybernetics and simulation, vol. 5. IEEE, pp 4104-4108\n24. Shabir S, Singla R (2016) A comparative study of genetic algorithm and the particle swarm optimization. International Journal of electrical engineering 9(2016):215-223\n25. Larrañaga P, Lozano JA (Eds.) (2001) Estimation of distribution algorithms: A new tool for evolutionary computation, vol. 2. Springer Science \\& Business Media\n26. Hauschild M, Pelikan M (2011) An introduction and survey of estimation of distribution algorithms. Swarm and Evolutionary Computation 1(3):111-128\n27. Harik GR, Lobo FG, Goldberg DE (1999) The compact genetic algorithm. IEEE Transactions on Evolutionary Computation 3(4):287-297\n28. Baluja S (1994) Population-based incremental learning. a method for integrating genetic search based function optimization and competitive learning. Carnegie-Mellon Univ Pittsburgh Pa Dept Of Computer Science\n29. Jin Y, Oh S, Jeon M (2010) Incremental approximation of nonlinear constraint functions for evolutionary constrained optimization. In IEEE Congress on Evolutionary Computation. IEEE, pp 1-8\n30. Harik G (1999) Linkage learning via probabilistic modeling in the ECGA, IlliGAL report, 99010\n31. Sastry K, Goldberg DE (2000) On extended compact genetic algorithm. In Late-Breaking Paper at the Genetic and Evolutionary Computation Conference pp 352-359\n32. Lanzi PL, Nichetti L, Sastry K, Voltini D, Goldberg DE (2008) Real-coded extended compact genetic algorithm based on mixtures of models. Linkage in evolutionary computation. Springer, Berlin, Heidelberg, pp 335-358\n33. Oh S, Lee S, Jeon M (2009) Evolutionary optimization programming with probabilistic models. In 2009 Fourth International on Conference on Bio-Inspired Computing. IEEE, pp 1-6\n34. Sastry K, Goldberg DE, Johnson DD (2007) Scalability of a hybrid extended compact genetic algorithm for ground state optimization of clusters. Materials and Manufacturing Processes 22(5):570-576\n35. José-García A, Gómez-Flores W (2016) Automatic clustering using nature-inspired metaheuristics: A survey. Applied Soft Computing 41:192-213\n36. Nanda SJ, Panda G (2014) A survey on nature inspired metaheuristic algorithms for partitional clustering. Swarm and Evolutionary Computation 16:1-18\n37. Maulik U, Bandyopadhyay S (2000) Genetic algorithm-based clustering technique. Pattern Recognition 33(9):1455-1465\n38. Thinsungnoen T, Kerdprasop K, Kerdprasop N (2018) Deep autoencoder networks optimized with genetic algorithms for efficient ECG clustering. International Journal of Machine Learning and Computing 8(2):112-116\n39. Shakil M, Fuad Yousif Mohammed A, Arul R, Bashir AK, Choi JK (2022) A novel dynamic framework to detect DDoS in SDN using metaheuristic clustering. Transactions on Emerging Telecommunications Technologies 33(3):e3622\n\n40. Kadiravan G, Sujatha P, Asvany T, Punithavathi R, Elhoseny M, Pustokhina I, Shankar K (2021) Metaheuristic clustering protocol for healthcare data collection in mobile wireless multimedia sensor networks. Computers, Materials \\& Continua 66(3):3215-3231\n41. Oh S, Ahn CW (2021) Evolutionary Computation-based Hybird Clustering Technique for Manufacuring Time Series Data. Smart Media Journal 10(3):23-30\n42. Oh S, Suh WH, Ahn CW (2021) Self-Adaptive Genetic Programming for Manufacturing Big Data Analysis. Symmetry 13(4):709\n43. Berndt DJ, Clifford J (1994) Using dynamic time warping to find patterns in time series. In KDD workshop 10(16):359-370\n44. Müller M (2007) Dynamic time warping. Information retrieval for music and motion 69-84\n45. Paparrizos J, Gravano L (2015) K-shape: Efficient and accurate clustering of time series. In Proceedings of the 2015 ACM SIGMOD international conference on management of data. pp $1855-1870$\n46. Sardá-Espinosa A (2017) Comparing time-series clustering algorithms in $r$ using the dtwclust package. R package vignette 12:41\n47. Olszewski RT (2001) Generalized feature extraction for structural pattern recognition in time-series data. Carnegie Mellon University\n48. Polap D, Woźniak M (2021) Red fox optimization algorithm. Expert Systems with Applications 166:114-107\n49. Połap D, Woźniak M (2017) Polar bear optimization algorithm: Meta-heuristic with fast population movement and dynamic birth and death mechanism. Symmetry 9(10):203\n50. Fan GF, Yu M, Dong SQ, Yeh YH, Hong WC (2021) Forecasting short-term electricity load using hybrid support vector regression with grey catastrophe and random forest modeling. Utilities Policy 73:101-294\n51. Dong W, Wu J, Zhang X, Bai Z, Wang P, Woźniak M (2022) Improving performance and efficiency of Graph Neural Networks by injective aggregation. Knowledge-Based Systems 254:109-616\n52. Dong W, Wozniak M, Wu J, Li W, Bai Z (2022) De-Noising Aggregation of Graph Neural Networks by Using Principal Component Analysis. IEEE Transactions on Industrial Informatics\n\nPublisher's Note Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.\n\nSpringer Nature or its licensor (e.g. a society or other partner) holds exclusive rights to this article under a publishing agreement with the author(s) or other rightsholder(s); author self-archiving of the accepted manuscript version of this article is solely governed by the terms of such publishing agreement and applicable law.\n![img-11.jpeg](img-11.jpeg)\n\nWoong Hyun Suh received the M.S. degree in Artificial Intelligence from the AI Graduate School at Gwangju Institute of Science and Technology (GIST), Republic of Korea, in 2022. In 2018, he received a B.A. in Electrical Engineering and Society, with a concentration in Economics, from the Jacobs School of Engineering, University of California, San Diego (UCSD). He is currently an Investment Manager at the Corporate Venture Capital Team of Hyundai Motor Group in Seoul, Korea. With the combined background of tech and finance, his current interests include discovering open innovation partnerships and strategic investment opportunities, especially in the field of future mobility.\n![img-12.jpeg](img-12.jpeg)\n\nSanghoun Oh received the Ph.D. degree from the Department of Information and Communications, Gwangju Institute of Science and Technology (GIST), Republic of Korea, in 2011. From 2011 to 2018, he worked with the Manufacturing Technology Center of Samsung Electronics, South Korea. He is currently working as a head of Development / Package Test / Management data analytics with the Department of Digital Transformation, SK Hynix. His research interests include genetic algorithms/ programming, multi-objective optimization and explainable artificial intelligence. Currently, he concentrates on applying meta-heuristic algorithms into manufacturing industries to find optimized solutions.\n![img-13.jpeg](img-13.jpeg)\n\nChang Wook Ahn received the Ph.D. degree from the Department of Information and Communications, Gwangju Institute of Science and Technology (GIST), Republic of Korea, in 2005. From 2005 to 2007, he worked with the Samsung Advanced Institute of Technology, South Korea. From 2008 to 2016, he was an Assistant/Associate Professor at the Department of Computer Engineering, Sungkyunkwan University (SKKU), Republic of Korea. He is currently working as a Professor with the AI Graduate School at GIST. His research interests include genetic algorithms/programming, multi-objective optimization, deep learning, and quantum machine learning.",
    "references": [
      {
        "ref_id": "1",
        "text": "Bajgar M, Calligaris S, Calvino F, Criscuolo C, Timmis J (2019) Bits and bolts: The digital transformation and manufacturing. OECD Science, Technology and Industry Working Papers, 2019/01, OECD Publishing, Paris"
      },
      {
        "ref_id": "2",
        "text": "Manyika J, Chui M, Brown B, Bughin J, Dobbs R, Roxburgh C, Hung Byers A (2011) Big data: The next frontier for innovation, competition, and productivity. McKinsey Global Institute, Washington, District of Columbia"
      },
      {
        "ref_id": "3",
        "text": "Jones MD, Hutcheson S, Camba JD (2021) Past, present, and future barriers to digital transformation in manufacturing: A review. Journal of Manufacturing Systems 60:936-948"
      },
      {
        "ref_id": "4",
        "text": "Chen H, Chiang RH, Storey VC (2012) Business intelligence and analytics: From big data to big impact. MIS quarterly, 1165-1188"
      },
      {
        "ref_id": "5",
        "text": "Samek W, Wiegand T, Müller KR (2017) Explainable artificial intelligence: Understanding, visualizing and interpreting deep learning models. arXiv preprint arXiv:1708.08296"
      },
      {
        "ref_id": "6",
        "text": "Samek W, Müller KR (2019) Towards explainable artificial intelligence. Explainable AI: interpreting, explaining and visualizing deep learning. Springer, Cham, pp 5-22"
      },
      {
        "ref_id": "7",
        "text": "Aghabozorgi S, Shirkhorshidi AS, Wah TY (2015) Time-series clustering-a decade review. Information Systems 53:16-38"
      },
      {
        "ref_id": "8",
        "text": "Mehrmolaei S, Keyvanpour MR, Savagiv M (2020) Metaheuristics on time series clustering problem: Theoretical and empirical evaluation. Evolutionary Intelligence, 1-20"
      },
      {
        "ref_id": "9",
        "text": "Andreopoulos B, An A, Wang X, Schroeder M (2009) A roadmap of clustering algorithms: finding a match for a biomedical application. Briefings in Bioinformatics 10(3):297-314"
      },
      {
        "ref_id": "10",
        "text": "Liao TW (2005) Clustering of time series data-a survey. Pattern Recognition 38(11):1857-1874"
      },
      {
        "ref_id": "11",
        "text": "Leng M, Lai X, Tan G, Xu X (2009) Time series representation for anomaly detection. In 2009 2nd IEEE International Conference on Computer Science and Information Technology. IEEE, pp 628632"
      },
      {
        "ref_id": "12",
        "text": "Munir M, Siddiqui SA, Dengel A, Ahmed S (2018) DeepAnT: A deep learning approach for unsupervised anomaly detection in time series. Ieee Access 7:1991-2005"
      },
      {
        "ref_id": "13",
        "text": "Ismail Fawaz H, Forestier G, Weber J, Idoumghar L, Muller PA (2019) Deep learning for time series classification: a review. Data Mining and Knowledge Discovery 33(4):917-963"
      },
      {
        "ref_id": "14",
        "text": "Katoch S, Chauhan SS, Kumar V (2021) A review on genetic algorithm: past, present, and future. Multimedia Tools and Applications 80(5):8091-8126"
      },
      {
        "ref_id": "15",
        "text": "Dhiman G (2021) ESA: a hybrid bio-inspired metaheuristic optimization approach for engineering problems. Engineering with Computers 37(1):323-353"
      },
      {
        "ref_id": "16",
        "text": "David Edward G (1989) Genetic Algorithms in Search, Optimization, and Machine Learning. Addison-Wesley"
      },
      {
        "ref_id": "17",
        "text": "Holland JH (1992) Adaptation in natural and artificial systems: an introductory analysis with applications to biology, control, and artificial intelligence. MIT press"
      },
      {
        "ref_id": "18",
        "text": "Ahn CW (2006) Advances in evolutionary algorithms. SpringerVerlag, Berlin Heidelberg"
      },
      {
        "ref_id": "19",
        "text": "Kennedy J, Eberhart R (1995) Particle swarm optimization. In Proceedings of ICNN'95-international conference on neural networks , vol 4. IEEE, pp 1942-1948"
      },
      {
        "ref_id": "20",
        "text": "Eberhart RC, Shi Y (1998) Comparison between genetic algorithms and particle swarm optimization. International conference on evolutionary programming. Springer, Berlin, Heidelberg, pp 611-616"
      },
      {
        "ref_id": "21",
        "text": "Lee S, Soak S, Oh S, Pedrycz W, Jeon M (2008) Modified binary particle swarm optimization. Progress in Natural Science 18(9):1161-1166"
      },
      {
        "ref_id": "22",
        "text": "Khanesar MA, Teshnehlab M, Shoorehdeli MA (2007) A novel binary particle swarm optimization. In 2007 Mediterranean conference on control \\& automation . IEEE, pp 1-6"
      },
      {
        "ref_id": "23",
        "text": "Kennedy J, Eberhart RC (1997) A discrete binary version of the particle swarm algorithm. In 1997 IEEE International conference on systems, man, and cybernetics. Computational cybernetics and simulation, vol. 5. IEEE, pp 4104-4108"
      },
      {
        "ref_id": "24",
        "text": "Shabir S, Singla R (2016) A comparative study of genetic algorithm and the particle swarm optimization. International Journal of electrical engineering 9(2016):215-223"
      },
      {
        "ref_id": "25",
        "text": "Larrañaga P, Lozano JA (Eds.) (2001) Estimation of distribution algorithms: A new tool for evolutionary computation, vol. 2. Springer Science \\& Business Media"
      },
      {
        "ref_id": "26",
        "text": "Hauschild M, Pelikan M (2011) An introduction and survey of estimation of distribution algorithms. Swarm and Evolutionary Computation 1(3):111-128"
      },
      {
        "ref_id": "27",
        "text": "Harik GR, Lobo FG, Goldberg DE (1999) The compact genetic algorithm. IEEE Transactions on Evolutionary Computation 3(4):287-297"
      },
      {
        "ref_id": "28",
        "text": "Baluja S (1994) Population-based incremental learning. a method for integrating genetic search based function optimization and competitive learning. Carnegie-Mellon Univ Pittsburgh Pa Dept Of Computer Science"
      },
      {
        "ref_id": "29",
        "text": "Jin Y, Oh S, Jeon M (2010) Incremental approximation of nonlinear constraint functions for evolutionary constrained optimization. In IEEE Congress on Evolutionary Computation. IEEE, pp 1-8"
      },
      {
        "ref_id": "30",
        "text": "Harik G (1999) Linkage learning via probabilistic modeling in the ECGA, IlliGAL report, 99010"
      },
      {
        "ref_id": "31",
        "text": "Sastry K, Goldberg DE (2000) On extended compact genetic algorithm. In Late-Breaking Paper at the Genetic and Evolutionary Computation Conference pp 352-359"
      },
      {
        "ref_id": "32",
        "text": "Lanzi PL, Nichetti L, Sastry K, Voltini D, Goldberg DE (2008) Real-coded extended compact genetic algorithm based on mixtures of models. Linkage in evolutionary computation. Springer, Berlin, Heidelberg, pp 335-358"
      },
      {
        "ref_id": "33",
        "text": "Oh S, Lee S, Jeon M (2009) Evolutionary optimization programming with probabilistic models. In 2009 Fourth International on Conference on Bio-Inspired Computing. IEEE, pp 1-6"
      },
      {
        "ref_id": "34",
        "text": "Sastry K, Goldberg DE, Johnson DD (2007) Scalability of a hybrid extended compact genetic algorithm for ground state optimization of clusters. Materials and Manufacturing Processes 22(5):570-576"
      },
      {
        "ref_id": "35",
        "text": "José-García A, Gómez-Flores W (2016) Automatic clustering using nature-inspired metaheuristics: A survey. Applied Soft Computing 41:192-213"
      },
      {
        "ref_id": "36",
        "text": "Nanda SJ, Panda G (2014) A survey on nature inspired metaheuristic algorithms for partitional clustering. Swarm and Evolutionary Computation 16:1-18"
      },
      {
        "ref_id": "37",
        "text": "Maulik U, Bandyopadhyay S (2000) Genetic algorithm-based clustering technique. Pattern Recognition 33(9):1455-1465"
      },
      {
        "ref_id": "38",
        "text": "Thinsungnoen T, Kerdprasop K, Kerdprasop N (2018) Deep autoencoder networks optimized with genetic algorithms for efficient ECG clustering. International Journal of Machine Learning and Computing 8(2):112-116"
      },
      {
        "ref_id": "39",
        "text": "Shakil M, Fuad Yousif Mohammed A, Arul R, Bashir AK, Choi JK (2022) A novel dynamic framework to detect DDoS in SDN using metaheuristic clustering. Transactions on Emerging Telecommunications Technologies 33(3):e3622"
      },
      {
        "ref_id": "40",
        "text": "Kadiravan G, Sujatha P, Asvany T, Punithavathi R, Elhoseny M, Pustokhina I, Shankar K (2021) Metaheuristic clustering protocol for healthcare data collection in mobile wireless multimedia sensor networks. Computers, Materials \\& Continua 66(3):3215-3231"
      },
      {
        "ref_id": "41",
        "text": "Oh S, Ahn CW (2021) Evolutionary Computation-based Hybird Clustering Technique for Manufacuring Time Series Data. Smart Media Journal 10(3):23-30"
      },
      {
        "ref_id": "42",
        "text": "Oh S, Suh WH, Ahn CW (2021) Self-Adaptive Genetic Programming for Manufacturing Big Data Analysis. Symmetry 13(4):709"
      },
      {
        "ref_id": "43",
        "text": "Berndt DJ, Clifford J (1994) Using dynamic time warping to find patterns in time series. In KDD workshop 10(16):359-370"
      },
      {
        "ref_id": "44",
        "text": "Müller M (2007) Dynamic time warping. Information retrieval for music and motion 69-84"
      },
      {
        "ref_id": "45",
        "text": "Paparrizos J, Gravano L (2015) K-shape: Efficient and accurate clustering of time series. In Proceedings of the 2015 ACM SIGMOD international conference on management of data. pp $1855-1870$"
      },
      {
        "ref_id": "46",
        "text": "Sardá-Espinosa A (2017) Comparing time-series clustering algorithms in $r$ using the dtwclust package. R package vignette 12:41"
      },
      {
        "ref_id": "47",
        "text": "Olszewski RT (2001) Generalized feature extraction for structural pattern recognition in time-series data. Carnegie Mellon University"
      },
      {
        "ref_id": "48",
        "text": "Polap D, Woźniak M (2021) Red fox optimization algorithm. Expert Systems with Applications 166:114-107"
      },
      {
        "ref_id": "49",
        "text": "Połap D, Woźniak M (2017) Polar bear optimization algorithm: Meta-heuristic with fast population movement and dynamic birth and death mechanism. Symmetry 9(10):203"
      },
      {
        "ref_id": "50",
        "text": "Fan GF, Yu M, Dong SQ, Yeh YH, Hong WC (2021) Forecasting short-term electricity load using hybrid support vector regression with grey catastrophe and random forest modeling. Utilities Policy 73:101-294"
      },
      {
        "ref_id": "51",
        "text": "Dong W, Wu J, Zhang X, Bai Z, Wang P, Woźniak M (2022) Improving performance and efficiency of Graph Neural Networks by injective aggregation. Knowledge-Based Systems 254:109-616"
      },
      {
        "ref_id": "52",
        "text": "Dong W, Wozniak M, Wu J, Li W, Bai Z (2022) De-Noising Aggregation of Graph Neural Networks by Using Principal Component Analysis. IEEE Transactions on Industrial Informatics"
      }
    ],
    "reference_count": 52,
    "pattern_matched": "(?:^|\\n)#+\\s*References?\\s*\\n"
  },
  "tables": [
    {
      "table_number": "1",
      "table_title": "Table 1 Metaheuristics computation time average (in seconds) of 100 iterations",
      "headers": [
        "",
        "",
        "GA",
        "BPSO",
        "CGA",
        "ECGA"
      ],
      "rows": [
        [
          25,
          1,
          51.192,
          64.885,
          0.998,
          76.347
        ],
        [
          "",
          2,
          32.713,
          43.871,
          0.819,
          54.739
        ],
        [
          "",
          3,
          40.7,
          52.23,
          0.912,
          62.877
        ],
        [
          "",
          4,
          42.104,
          54.736,
          0.909,
          66.065
        ],
        [
          "",
          5,
          47.769,
          61.241,
          0.975,
          75.473
        ],
        [
          "",
          6,
          43.875,
          57.058,
          0.928,
          70.516
        ],
        [
          "",
          "mean",
          43.059,
          55.67,
          0.924,
          67.669
        ],
        [
          75,
          1,
          128.42,
          167.573,
          2.761,
          195.367
        ],
        [
          "",
          2,
          98.155,
          132.073,
          2.454,
          162.813
        ],
        [
          "",
          3,
          126.696,
          166.298,
          2.752,
          197.311
        ],
        [
          "",
          4,
          108.122,
          144.319,
          2.562,
          174.948
        ],
        [
          "",
          5,
          129.809,
          169.913,
          2.756,
          206.869
        ],
        [
          "",
          6,
          122.967,
          162.145,
          2.7,
          199.32
        ],
        [
          "",
          "mean",
          119.028,
          157.053,
          2.664,
          189.438
        ]
      ],
      "row_count": 14,
      "column_count": 6
    },
    {
      "table_number": "2",
      "table_title": "Table 2 ECGA model samples",
      "headers": [
        "Signal 1",
        "[2]",
        "[5]",
        "$[6,9]$",
        "$[3,11]$",
        "$[0,8]$",
        "$[7,10]$",
        "$[1,4]$"
      ],
      "rows": [
        [
          "",
          6,
          "$[2,7]$",
          "$[0,3]$",
          "$[5,8]$",
          "$[1,4]$",
          "",
          ""
        ],
        [
          "",
          2,
          8,
          "$[4,6]$",
          "$[7,9]$",
          "$[0,5]$",
          "$[1,3]$",
          ""
        ],
        [
          "",
          1,
          3,
          5,
          6,
          "$[2,7]$",
          "$[0,4,8]$",
          ""
        ],
        [
          "",
          0,
          5,
          8,
          "$[2,7]$",
          "$[3,4]$",
          "$[1,6]$",
          ""
        ],
        [
          2,
          7,
          "$[3,5]$",
          "$[4,6]$",
          "$[0,1,2]$",
          "",
          "",
          ""
        ],
        [
          "",
          4,
          "$[0,6]$",
          "$[1,7]$",
          "$[3,2,5]$",
          "",
          "",
          ""
        ],
        [
          "",
          6,
          "$[1,7]$",
          "$[2,0,3]$",
          "$[4,5]$",
          "",
          "",
          ""
        ],
        [
          "",
          6,
          "$[1,7]$",
          "$[4,5]$",
          "$[3,0,2]$",
          "",
          "",
          ""
        ],
        [
          "",
          6,
          "$[1,2]$",
          "$[4,7]$",
          "$[0,3,5]$",
          "",
          "",
          ""
        ],
        [
          3,
          0,
          "$[8,9]$",
          "$[1,4,6]$",
          "$[2,7]$",
          "$[3,5]$",
          "",
          ""
        ],
        [
          "",
          47,
          "$[2,6]$",
          "$[0,1]$",
          "$[3,5]$",
          "",
          "",
          ""
        ],
        [
          "",
          4,
          "$[2,7]$",
          "$[5,8]$",
          "$[0,3]$",
          "$[1,6]$",
          "",
          ""
        ],
        [
          "",
          0,
          5,
          8,
          "$[2,7]$",
          "$[3,4]$",
          "$[1,6]$",
          ""
        ],
        [
          "",
          2,
          4,
          6,
          "$[1,7]$",
          "$[3,0,5]$",
          "",
          ""
        ],
        [
          4,
          3,
          5,
          "$[4,7]$",
          "$[0,1]$",
          "$[2,6]$",
          "",
          ""
        ],
        [
          "",
          12,
          "$[0,2]$",
          "$[9,11]$",
          "$[3,7]$",
          "$[1,6]$",
          "$[8,10]$",
          "$[4,5]$"
        ],
        [
          "",
          0,
          2,
          4,
          "$[1,7]$",
          "$[3,5,6]$",
          "",
          ""
        ],
        [
          "",
          5,
          6,
          8,
          "$[2,7]$",
          "$[0,3]$",
          "$[1,4]$",
          ""
        ],
        [
          "",
          68,
          "$[5,7]$",
          "$[1,2]$",
          "$[4,0,3]$",
          "",
          "",
          ""
        ],
        [
          5,
          6,
          "$[4,7]$",
          "$[2,5]$",
          "$[3,0,1]$",
          "",
          "",
          ""
        ],
        [
          "",
          9,
          10,
          "$[5,7]$",
          "$[1,3]$",
          "$[8,4,6]$",
          "$[0,2]$",
          ""
        ],
        [
          "",
          5,
          "$[4,7]$",
          "$[3,6]$",
          "$[1,0,2]$",
          "",
          "",
          ""
        ],
        [
          "",
          1,
          5,
          8,
          "$[2,7]$",
          "$[4,6]$",
          "$[0,3]$",
          ""
        ],
        [
          6,
          7,
          "$[5,8]$",
          "$[0,3]$",
          "$[1,6]$",
          "$[2,4]$",
          "",
          ""
        ],
        [
          "",
          7,
          "$[5,8]$",
          "$[0,3]$",
          "$[2,6]$",
          "$[1,4]$",
          "",
          ""
        ],
        [
          "",
          "$[1,6]$",
          "$[7,9]$",
          "$[8,0,10]$",
          "$[3,5]$",
          "$[2,4]$",
          "",
          ""
        ],
        [
          "",
          "$[8,4,6]$",
          "$[7,9]$",
          "$[2,3]$",
          "$[1,0,5]$",
          "",
          "",
          ""
        ],
        [
          "",
          4,
          8,
          "$[0,3]$",
          "$[5,7]$",
          "$[6,1,2]$",
          "",
          ""
        ]
      ],
      "row_count": 28,
      "column_count": 8
    },
    {
      "table_number": "2",
      "table_title": "bilistic model used in ECGA can be summarized as creating partitions in population space for selecting better chromosomes. For example, if a binary chromosome with length of 8 is partitioned as [1], [0,3], [2,4,6], [5,7]; there are 4 model blocks. The bits inside each block are considered to be jointly distributed, while the sole bit is considered to be independently distributed. In other words, cluster centroids located in the 0th and 3rd place in the binary chromosome are highly related and are jointly distributed in the population space. This probabilistic model is used for selecting a new population, namely chromosomes, for the next generation cycle for searching for better, or the best, gene that returns the highest fitness value.",
      "headers": [
        "Data",
        "Signal 1",
        "Signal 2",
        "Signal 3",
        "Signal 4",
        "Signal 5",
        "Signal 6"
      ],
      "rows": [
        [
          "Sample rate $25 \\%$",
          1.65,
          "$\\mathbf{2 . 3 7 9}$",
          1.661,
          1.612,
          1.737,
          "$\\mathbf{1 . 8 3 2}$"
        ],
        [
          "Sample rate $75 \\%$",
          1.61,
          "$\\mathbf{2 . 2 4 3}$",
          1.689,
          1.591,
          1.692,
          "$\\mathbf{1 . 9 3 1}$"
        ]
      ],
      "row_count": 2,
      "column_count": 7
    },
    {
      "table_number": "4",
      "table_title": "Table 4 Total average of 100 iterations with $25 \\%$ sample rate",
      "headers": [
        "",
        "stats",
        "GA",
        "BPSO",
        "CGA",
        "ECGA",
        "HH",
        "HP",
        "H",
        "P"
      ],
      "rows": [
        [
          1,
          "mean",
          1.911,
          1.911,
          1.911,
          1.911,
          14.558,
          15.207,
          2.063,
          2.696
        ],
        [
          "",
          "sd",
          0.694,
          0.694,
          0.694,
          0.694,
          0.897,
          0.739,
          0.765,
          0.689
        ],
        [
          "",
          1,
          1.436,
          1.436,
          1.436,
          1.436,
          13.85,
          14.731,
          1.49,
          2.194
        ],
        [
          "",
          2,
          1.999,
          1.999,
          1.999,
          1.999,
          14.603,
          15.094,
          2.155,
          2.797
        ],
        [
          "",
          3,
          2.279,
          2.279,
          2.279,
          2.279,
          15.177,
          15.674,
          2.497,
          3.063
        ],
        [
          "",
          "Low",
          1.906,
          1.906,
          1.906,
          1.906,
          14.552,
          15.201,
          2.058,
          2.691
        ],
        [
          "",
          "High",
          1.916,
          1.916,
          1.916,
          1.916,
          14.565,
          15.212,
          2.069,
          2.701
        ],
        [
          "",
          "CI",
          0.01,
          0.01,
          0.01,
          0.01,
          0.013,
          0.011,
          0.011,
          0.01
        ],
        [
          2,
          "mean",
          37.79,
          37.799,
          38.26,
          37.798,
          49.2,
          48.837,
          47.131,
          42.11
        ],
        [
          "",
          "sd",
          27.62,
          27.615,
          27.772,
          27.618,
          25.286,
          25.244,
          33.186,
          33.057
        ],
        [
          "",
          1,
          22.843,
          22.851,
          23.139,
          22.843,
          37.328,
          37.403,
          28.556,
          23.271
        ],
        [
          "",
          2,
          30.596,
          30.599,
          30.986,
          30.601,
          41.945,
          41.441,
          36.658,
          31.706
        ],
        [
          "",
          3,
          39.163,
          39.169,
          39.736,
          39.207,
          48.309,
          47.469,
          47.813,
          42.709
        ],
        [
          "",
          "Low",
          37.587,
          37.595,
          38.055,
          37.594,
          49.014,
          48.651,
          46.887,
          41.866
        ],
        [
          "",
          "High",
          37.994,
          38.002,
          38.464,
          38.001,
          49.386,
          49.023,
          47.376,
          42.353
        ],
        [
          "",
          "CI",
          0.407,
          0.407,
          0.409,
          0.407,
          0.373,
          0.372,
          0.489,
          0.487
        ],
        [
          3,
          "mean",
          3.382,
          3.382,
          3.382,
          3.382,
          18.197,
          17.234,
          3.564,
          3.967
        ],
        [
          "",
          "sd",
          0.913,
          0.913,
          0.913,
          0.913,
          0.979,
          0.953,
          0.959,
          0.902
        ],
        [
          "",
          1,
          2.795,
          2.795,
          2.795,
          2.795,
          17.551,
          16.574,
          2.925,
          3.391
        ],
        [
          "",
          2,
          3.207,
          3.207,
          3.207,
          3.207,
          18.228,
          17.213,
          3.393,
          3.791
        ],
        [
          "",
          3,
          3.757,
          3.757,
          3.757,
          3.757,
          18.839,
          17.848,
          3.993,
          4.318
        ],
        [
          "",
          "Low",
          3.376,
          3.376,
          3.376,
          3.376,
          18.19,
          17.227,
          3.557,
          3.961
        ],
        [
          "",
          "High",
          3.389,
          3.389,
          3.389,
          3.389,
          18.204,
          17.241,
          3.571,
          3.974
        ],
        [
          "",
          "CI",
          0.013,
          0.013,
          0.013,
          0.013,
          0.014,
          0.014,
          0.014,
          0.013
        ],
        [
          4,
          "mean",
          4.241,
          4.241,
          4.246,
          4.241,
          16.104,
          13.75,
          4.613,
          4.828
        ],
        [
          "",
          "sd",
          2.708,
          2.708,
          2.726,
          2.708,
          2.399,
          2.385,
          3.014,
          2.608
        ],
        [
          "",
          1,
          2.972,
          2.972,
          2.972,
          2.972,
          14.707,
          12.466,
          3.048,
          3.732
        ],
        [
          "",
          2,
          3.704,
          3.704,
          3.705,
          3.704,
          15.686,
          13.193,
          3.949,
          4.239
        ],
        [
          "",
          3,
          4.667,
          4.667,
          4.669,
          4.667,
          16.857,
          14.318,
          5.238,
          5.001
        ],
        [
          "",
          "Low",
          4.221,
          4.221,
          4.226,
          4.221,
          16.087,
          13.733,
          4.591,
          4.809
        ],
        [
          "",
          "High",
          4.26,
          4.26,
          4.266,
          4.26,
          16.122,
          13.768,
          4.635,
          4.847
        ],
        [
          "",
          "CI",
          0.04,
          0.04,
          0.04,
          0.04,
          0.035,
          0.035,
          0.044,
          0.038
        ],
        [
          5,
          "mean",
          7.095,
          7.096,
          7.12,
          7.095,
          16.357,
          15.354,
          7.647,
          7.837
        ],
        [
          "",
          "sd",
          6.195,
          6.198,
          6.25,
          6.195,
          5.091,
          5.503,
          7.084,
          6.745
        ],
        [
          "",
          1,
          3.808,
          3.808,
          3.809,
          3.808,
          13.722,
          12.337,
          3.851,
          4.642
        ],
        [
          "",
          2,
          5.117,
          5.117,
          5.123,
          5.117,
          14.674,
          13.589,
          5.379,
          5.547
        ],
        [
          "",
          3,
          7.768,
          7.769,
          7.783,
          7.768,
          16.7,
          15.906,
          8.523,
          8.007
        ],
        [
          "",
          "Low",
          7.049,
          7.05,
          7.074,
          7.049,
          16.319,
          15.313,
          7.595,
          7.787
        ],
        [
          "",
          "High",
          7.14,
          7.141,
          7.166,
          7.14,
          16.394,
          15.394,
          7.7,
          7.886
        ],
        [
          "",
          "CI",
          0.091,
          0.091,
          0.092,
          0.091,
          0.075,
          0.081,
          0.104,
          0.099
        ],
        [
          6,
          "mean",
          10.076,
          10.078,
          10.129,
          10.077,
          18.571,
          16.53,
          11.71,
          10.607
        ],
        [
          "",
          "sd",
          8.904,
          8.908,
          8.988,
          8.905,
          8.376,
          8.085,
          10.852,
          10.362
        ],
        [
          "",
          1,
          4.877,
          4.877,
          4.898,
          4.877,
          13.733,
          11.542,
          5.532,
          5.057
        ],
        [
          "",
          2,
          6.695,
          6.695,
          6.704,
          6.695,
          15.243,
          13.77,
          7.893,
          6.763
        ],
        [
          "",
          3,
          11.404,
          11.404,
          11.424,
          11.405,
          20.111,
          18.067,
          13.008,
          11.517
        ],
        [
          "",
          "Low",
          10.011,
          10.012,
          10.062,
          10.011,
          18.51,
          16.47,
          11.63,
          10.531
        ],
        [
          "",
          "High",
          10.142,
          10.143,
          10.195,
          10.142,
          18.633,
          16.589,
          11.79,
          10.684
        ],
        [
          "",
          "CI",
          0.131,
          0.131,
          0.132,
          0.131,
          0.123,
          0.119,
          0.16,
          0.153
        ]
      ],
      "row_count": 48,
      "column_count": 10
    },
    {
      "table_number": "5",
      "table_title": "Table 5 Total average of 100 iterations with $75 \\%$ sample rate",
      "headers": [
        "",
        "stats",
        "GA",
        "BPSO",
        "CGA",
        "ECGA",
        "HH",
        "HP",
        "H",
        "P"
      ],
      "rows": [
        [
          1,
          "mean",
          2.088,
          2.088,
          2.088,
          2.088,
          18.082,
          14.436,
          2.111,
          3.025
        ],
        [
          "",
          "sd",
          0.88,
          0.88,
          0.88,
          0.88,
          0.741,
          0.737,
          0.901,
          0.735
        ],
        [
          "",
          1,
          1.304,
          1.304,
          1.304,
          1.304,
          17.578,
          13.967,
          1.304,
          2.455
        ],
        [
          "",
          2,
          2.288,
          2.288,
          2.288,
          2.288,
          18.091,
          14.305,
          2.299,
          3.155
        ],
        [
          "",
          3,
          2.607,
          2.607,
          2.607,
          2.607,
          18.562,
          14.937,
          2.643,
          3.422
        ],
        [
          "",
          "Low",
          2.086,
          2.086,
          2.086,
          2.086,
          18.08,
          14.434,
          2.109,
          3.023
        ],
        [
          "",
          "High",
          2.09,
          2.09,
          2.09,
          2.09,
          18.084,
          14.438,
          2.113,
          3.026
        ],
        [
          "",
          "CI",
          0.004,
          0.004,
          0.004,
          0.004,
          0.004,
          0.004,
          0.004,
          0.004
        ],
        [
          2,
          "mean",
          37.747,
          37.763,
          38.193,
          37.754,
          48.681,
          49.244,
          46.609,
          41.994
        ],
        [
          "",
          "sd",
          27.484,
          27.482,
          27.533,
          27.486,
          25.948,
          24.827,
          32.937,
          33.018
        ],
        [
          "",
          1,
          23.009,
          23.014,
          23.267,
          23.012,
          36.483,
          38.193,
          28.549,
          23.383
        ],
        [
          "",
          2,
          30.597,
          30.605,
          30.997,
          30.6,
          40.848,
          41.904,
          36.189,
          31.376
        ],
        [
          "",
          3,
          39.208,
          39.243,
          39.853,
          39.232,
          47.222,
          47.994,
          45.748,
          42.19
        ],
        [
          "",
          "Low",
          37.68,
          37.696,
          38.126,
          37.687,
          48.617,
          49.183,
          46.529,
          41.913
        ],
        [
          "",
          "High",
          37.815,
          37.831,
          38.261,
          37.821,
          48.744,
          49.304,
          46.69,
          42.075
        ],
        [
          "",
          "CI",
          0.135,
          0.135,
          0.135,
          0.135,
          0.127,
          0.122,
          0.161,
          0.162
        ],
        [
          3,
          "mean",
          3.239,
          3.239,
          3.24,
          3.239,
          20.599,
          16.692,
          3.282,
          3.976
        ],
        [
          "",
          "sd",
          0.915,
          0.915,
          0.916,
          0.915,
          0.953,
          0.956,
          0.937,
          0.897
        ],
        [
          "",
          1,
          2.668,
          2.668,
          2.668,
          2.668,
          19.978,
          16.022,
          2.686,
          3.416
        ],
        [
          "",
          2,
          3.061,
          3.061,
          3.061,
          3.061,
          20.627,
          16.653,
          3.105,
          3.798
        ],
        [
          "",
          3,
          3.6,
          3.6,
          3.601,
          3.6,
          21.216,
          17.31,
          3.671,
          4.302
        ],
        [
          "",
          "Low",
          3.237,
          3.237,
          3.237,
          3.237,
          20.597,
          16.69,
          3.28,
          3.974
        ],
        [
          "",
          "High",
          3.242,
          3.242,
          3.242,
          3.242,
          20.602,
          16.694,
          3.284,
          3.979
        ],
        [
          "",
          "CI",
          0.004,
          0.004,
          0.004,
          0.004,
          0.005,
          0.005,
          0.005,
          0.004
        ],
        [
          4,
          "mean",
          4.157,
          4.157,
          4.163,
          4.157,
          16.803,
          13.829,
          4.377,
          4.957
        ],
        [
          "",
          "sd",
          2.806,
          2.806,
          2.822,
          2.806,
          2.459,
          2.378,
          3.012,
          2.687
        ],
        [
          "",
          1,
          2.811,
          2.811,
          2.811,
          2.811,
          15.433,
          12.561,
          2.827,
          3.907
        ],
        [
          "",
          2,
          3.59,
          3.59,
          3.59,
          3.59,
          16.352,
          13.256,
          3.693,
          4.377
        ],
        [
          "",
          3,
          4.647,
          4.647,
          4.652,
          4.647,
          17.522,
          14.369,
          4.931,
          5.075
        ],
        [
          "",
          "Low",
          4.15,
          4.15,
          4.156,
          4.15,
          16.797,
          13.823,
          4.37,
          4.951
        ],
        [
          "",
          "High",
          4.164,
          4.164,
          4.17,
          4.164,
          16.809,
          13.835,
          4.385,
          4.964
        ],
        [
          "",
          "CI",
          0.014,
          0.014,
          0.014,
          0.014,
          0.012,
          0.012,
          0.015,
          0.013
        ],
        [
          5,
          "mean",
          7.142,
          7.142,
          7.164,
          7.142,
          17.761,
          15.167,
          7.643,
          7.862
        ],
        [
          "",
          "sd",
          6.321,
          6.323,
          6.405,
          6.323,
          4.975,
          5.514,
          7.167,
          6.751
        ],
        [
          "",
          1,
          3.829,
          3.829,
          3.829,
          3.829,
          15.287,
          12.135,
          3.849,
          4.723
        ],
        [
          "",
          2,
          5.09,
          5.09,
          5.092,
          5.09,
          16.102,
          13.447,
          5.331,
          5.579
        ],
        [
          "",
          3,
          7.824,
          7.824,
          7.827,
          7.824,
          18.007,
          15.704,
          8.448,
          8.021
        ],
        [
          "",
          "Low",
          7.126,
          7.127,
          7.148,
          7.126,
          17.749,
          15.154,
          7.625,
          7.846
        ],
        [
          "",
          "High",
          7.157,
          7.158,
          7.18,
          7.157,
          17.773,
          15.181,
          7.66,
          7.879
        ],
        [
          "",
          "CI",
          0.031,
          0.031,
          0.031,
          0.031,
          0.024,
          0.027,
          0.035,
          0.033
        ],
        [
          6,
          "mean",
          10.017,
          10.018,
          10.073,
          10.018,
          19.643,
          16.428,
          11.68,
          10.595
        ],
        [
          "",
          "sd",
          9.024,
          9.025,
          9.122,
          9.026,
          8.036,
          8.166,
          11.207,
          10.559
        ],
        [
          "",
          1,
          4.725,
          4.725,
          4.756,
          4.725,
          14.923,
          11.344,
          5.304,
          4.959
        ],
        [
          "",
          2,
          6.586,
          6.586,
          6.59,
          6.586,
          16.283,
          13.662,
          8.001,
          6.612
        ],
        [
          "",
          3,
          11.426,
          11.427,
          11.442,
          11.426,
          21.347,
          18.009,
          12.825,
          11.555
        ],
        [
          "",
          "Low",
          9.995,
          9.996,
          10.051,
          9.996,
          19.623,
          16.408,
          11.652,
          10.569
        ],
        [
          "",
          "High",
          10.039,
          10.04,
          10.096,
          10.04,
          19.663,
          16.448,
          11.707,
          10.621
        ],
        [
          "",
          "CI",
          0.044,
          0.044,
          0.045,
          0.044,
          0.039,
          0.04,
          0.055,
          0.052
        ]
      ],
      "row_count": 48,
      "column_count": 10
    },
    {
      "table_number": "6",
      "table_title": "Table 6 Anomaly detection accuracy (\\%) comparison",
      "headers": [
        "",
        "Method",
        "Wafer",
        "FordA",
        "FordB"
      ],
      "rows": [
        [
          "ML",
          "LR",
          93.9,
          49.18,
          49.01
        ],
        [
          "",
          "XGB",
          93.9,
          49.18,
          49.01
        ],
        [
          "Metaheuristic",
          "GA",
          "$69.9 / 88.93 / \\mathbf{9 0 . 0 4}$",
          "$68.25 / \\mathbf{6 8 . 6 4} / 52.49$",
          "$\\mathbf{5 7 . 1 5} / 53.94 / 50.98$"
        ],
        [
          "$(1 \\sigma / 2 \\sigma / 3 \\sigma)$",
          "BPSO",
          "$71.7 / 88.92 / \\mathbf{9 0 . 0 5}$",
          "$68.26 / \\mathbf{6 8 . 6 4} / 52.49$",
          "$\\mathbf{5 7 . 1 6} / 53.95 / 50.98$"
        ],
        [
          "",
          "CGA",
          "$71.6 / 89.76 / \\mathbf{8 8 . 4 8}$",
          "$68.41 / \\mathbf{6 8 . 5 6} / 52.42$",
          "$\\mathbf{5 6 . 5 4} / 52.76 / 50.84$"
        ],
        [
          "",
          "ECGA",
          "$69.9 / 88.8 / \\mathbf{9 0 . 0 0}$",
          "$68.25 / \\mathbf{6 8 . 6 2} / 52.50$",
          "$\\mathbf{5 7 . 1 5} / 53.94 / 50.98$"
        ],
        [
          "DL",
          "FCN",
          99.71,
          88.71,
          70.25
        ],
        [
          "",
          "MLP",
          99.562,
          80.76,
          68.27
        ],
        [
          "",
          "ResNet",
          99.562,
          93.1,
          81.48
        ],
        [
          "",
          "LSTM",
          99.9,
          93.79,
          79.01
        ]
      ],
      "row_count": 10,
      "column_count": 5
    }
  ]
}