{
  "metadata": {
    "file_path": "/Users/id05309/Documents/tfm/mistral/mistral-markdown/2024/Test Data Generation for Mutation Testing Based on Markov Chain Usage Model and Estimation of Distribution Algorithm.md",
    "filename": "Test Data Generation for Mutation Testing Based on Markov Chain Usage Model and Estimation of Distribution Algorithm.md",
    "title": "Test Data Generation for Mutation Testing Based on Markov Chain Usage Model and Estimation of Distribution Algorithm",
    "year": "2024"
  },
  "references": {
    "header": "## REFERENCES",
    "content": "[1] R. A. Demillo, R. J. Lipton, and F. G. Sayward, \"Hints on test data selection: Help for the practicing programmer,\" Computer, vol. 11, no. 4, pp. 34-41, Apr. 1978.\n[2] R. Just, D. Jalali, L. Inozemtseva, M. D. Ernst, R. Holmes, and G. Fraser, \"Are mutants a valid substitute for real faults in software testing?\" in Proc. 22nd ACM SIGSOFT Int. Symp. Found. Softw. Eng., 2014, pp. 654-665.\n[3] B. H. Smith and L. Williams, \"On guiding the augmentation of an automated test suite via mutation analysis,\" Empirical Softw. Eng., vol. 14, no. 3, pp. 341-369, 2009.\n[4] M. Papadakis and N. Malevris, \"Automatically performing weak mutation with the aid of symbolic execution, concolic testing and searchbased testing,\" Softw. Qual. J., vol. 19, no. 4, pp. 691-723, 2011.\n[5] M. Papadakis and N. Malevris, \"Mutation based test case generation via a path selection strategy,\" Inf. Softw. Technol., vol. 54, no. 9, pp. 915-932, 2012.\n[6] J. Shan, Y. Gao, M. Liu, J. Liu, L. Zhang, and J. Sun, \"A new approach to automated test data generation in mutation testing,\" Chin. J. Comput., vol. 31, no. 6, pp. 1025-1034, 2008.\n[7] J. Shan, J. Wang, Z. Qi, and J. Wu, \"Improved method to generate path-wise test data,\" J. Comput. Sci. Technol., vol. 18, no. 2, pp. 235240, 2003.\n[8] X. Zhao and B. Gu, \"Generation of test cases in mutation testing using genetic algorithm,\" J. Comput. Appl., vol. 29, no. 0z1, pp. 262264, 2009.\n[9] A. J. Offutt and R. H. Untch, \"Mutation 2000: Uniting the orthogonal,\" in Proc. 1st Workshop Mutation Anal. (MUTATION), 2001, pp. 34-44.\n[10] Y. Ma, J. Offutt, and Y. R. Kwon, \"MuJava: An automated class mutation system,\" Softw. Testing, Verification Rel., vol. 15, no. 2, pp. 97133, 2005.\n[11] X. Chen and Q. Gu, \"Mutation testing: Principal, optimization and application,\" J. Frontier Comput. Sci. Technol., vol. 6, no. 12, pp. 10571075, 2012.\n[12] G. Fraser and A. Zeller, \"Mutation-driven generation of unit tests and oracles,\" IEEE Trans. Softw. Eng., vol. 38, no. 2, pp. 278-292, 2012.\n[13] R. Khan, M. Amjad, and A. K. Srivastava, \"Generation of automatic test cases with mutation analysis and hybrid genetic algorithm,\" in Proc. 3rd Int. Conf. Comput. Intell. Commun. Technol. (CICT), 2017, pp. 1-4.\n[14] R. A. DeMilli and A. J. Offutt, \"Constraint-based automatic test data generation,\" IEEE Trans. Softw. Eng., vol. 17, no. 9, pp. 900-910, Sep. 1991.\n[15] X. Yao, G. Zhang, F. Pan, D. Gong, and C. Wei, \"Orderly generation of test data via sorting mutant branches based on their dominance degrees for weak mutation testing,\" IEEE Trans. Softw. Eng., vol. 48, no. 4, pp. 1169-1184, Apr. 2022.\n[16] X. Dang, D. Gong, X. Yao, T. Tian, and H. Liu, \"Enhancement of mutation testing via fuzzy clustering and multi-population genetic algorithm,\" IEEE Trans. Softw. Eng., vol. 48, no. 6, pp. 2141-2156, Jun. 2022.\n[17] C. Wei, X. Yao, D. Gong, and H. Liu, \"Spectral clustering based mutant reduction for mutation testing,\" Inf. Softw. Technol., vol. 132, 2021, Art. no. 106502.\n[18] W. E. Howden, \"Weak mutation testing and completeness of test sets,\" IEEE Trans. Softw. Eng., vol. 8, no. 4, pp. 371-379, Jul. 1982.\n[19] A. J. Offutt and S. D. Lee, \"How strong is weak mutation?\" in Proc. Symp. Testing, 1991, pp. 200-213.\n[20] J. A. Whittaker and J. H. Poore, \"Markov analysis of software specifications,\" ACM Trans. Softw. Eng. Methodol., vol. 2, no. 1, pp. 93108, 1993.\n[21] J. A. Whittaker and M. G. Thomason, \"A Markov chain model for statistical software testing,\" IEEE Trans. Softw. Eng., vol. 20, no. 10, pp. 812-824, Oct. 1994.\n[22] Y. Wang, F. Ye, X. Zhu, and C. Wu, \"A method for software reliability test case design based on Markov chain usage model,\" in Proc. Int. Conf. Qual., Rel., Risk, Maintenance, Saf. Eng., 2013, pp. 1207-1210.\n[23] J. Whittaker and J. Poore, \"Statistical testing for cleanroom software engineering,\" in Proc. 25th Hawaii Int. Conf. Syst. Sci., 1992, pp. $428-436$.\n[24] D. E. Goldberg, Genetic Algorithms in Search, Optimization, and Machine Learning. Reading, MA, USA: Addison-Wesley, 1988.\n[25] Z. Shude and S. Zengqi, \"A survey on estimation of distribution algorithms,\" Acta Automatica Sinica, vol. 33, no. 2, pp. 113-124, 2007.\n[26] D. Goldberg, The Design of Innovation: Lessons from and for Competent Genetic Algorithms. Norwell, MA, USA: Kluwer, 2002.\n[27] J. J. Grefenstette, \"Optimization of control parameters for genetic algorithms,\" IEEE Trans. Syst., Man, Cybern., vol. 16, no. 1, pp. 122128, Jan. 1986.\n[28] H. Lei and L. Chen, \"Test case generation based on Markov chain usage model,\" J. Univ. Electron. Sci. Technol. China, vol. 40, no. 5, pp. 732736, 2011.\n[29] Y. Dong and J. Peng, \"Automatic generation of software test cases based on improved genetic algorithm,\" in Proc. Int. Conf. Multimedia Technol., 2011, pp. 227-230.\n[30] P. Hu and D. Hu, \"Research on automatic generation of string type test data based on genetic algorithms,\" J. Huaihua Univ., vol. 27, no. 8, 2008, Art. no. 3.\n[31] B. Korel, \"Automated software test data generation,\" IEEE Trans. Softw. Eng., vol. 16, no. 8, pp. 870-879, Aug. 1990.\n[32] G. Zhang, \"Test case generation for mutation testing based on set evolution and dominance relation,\" Ph.D. dissertation, China Univ. Mining Technol., Xuzhou, China, 2017.\n[33] Y. Yu, \"Research on key technologies of dynamic hardware and software partitioning,\" Ph.D. dissertation, Tianjin Univ., Tianjin, China, 2011.\n[34] C. Pacheco and M. D. Ernst, \"RANDOOP: Feedback-directed random testing for Java,\" in Proc. Companion 22nd Annu. ACM SIGPLAN Conf. Object-Oriented Program., Syst., Lang., Appl., 2007, pp. 1-2.\n[35] M. Masud, A. Nayak, M. Zaman, and N. Bansal, \"Strategy for mutation testing using genetic algorithms,\" in Proc. Can. Conf. Elect. Comput. Eng., 2005, pp. 1049-1052.\n[36] Y. Du, Y. Pan, H. Ao, N. O. Alexander, and Y. Fan, \"Automatic test case generation and optimization based on mutation testing,\" in Proc. IEEE 19th Int. Conf. Softw. Qual., Rel. Secur. Companion (QRS-C), 2019, pp. 522-523.\n[37] F. C. M. Souza, M. Papadakis, Y. L. Traon, and M. E. Delamaro, \"Strong mutation-based test data generation using hill climbing,\" in Proc. IEEE/ACM 9th Int. Workshop Search-Based Softw. Testing (SBST), 2016, pp. 45-54.\n[38] X. Du, Q. Qiang, and L. Huang, \"A method combined with data flow constraint for generating mutation test cases,\" Softw. Eng. Appl., vol. 7, no. 2, pp. 99-109, 2018.\n[39] S. Liu and Y. Li, \"An auotmatic data generation test method,\" Comput. Eng., vol. 13, no. 5, pp. 26-32, 1987.\n[40] D. Gong, F. Pan, T. Tian, S. Yang, and F. Meng, \"A feedback-directed method of evolutionary test data generation for parallel programs,\" Inf. Softw. Technol., vol. 124, no. 2, pp. 1-15, 2020.\n[41] H. Tanno, X. Zhang, T. Hoshino, and K. Sen, \"TesMa and CATG: Automated test generation tools for models of enterprise applications,\" in Proc. IEEE/ACM 37th IEEE Int. Conf. Softw. Eng., 2015, pp. 717-720.\n[42] K. Lakhotia, M. Harman, and H. Gross, \"AUSTIN: A tool for search based software testing for the C language and its evaluation on deployed automotive systems,\" in Proc. 2nd Int. Symp. Search Based Softw. Eng., 2010, pp. 101-110.\n[43] K. K. Mishra, S. Tiwari, A. Kumar, and A. K. Misra, \"An approach for mutation testing using elitist genetic algorithm,\" in Proc. 3rd Int. Conf. Comput. Sci. Inf. Technol., 2010, pp. 426-429.\n[44] A. P. Mathur and W. E. Wong, \"An empirical comparison of data flow and mutation-based test adequacy criteria,\" Softw. Testing Verification Rel., vol. 4, no. 1, pp. 9-31, 2010.\n[45] L. Zhang, S. Hou, J. Hu, T. Xie, and H. Mei, \"Is operator-based mutant selection superior to random mutant selection?\" in Proc. ACM/IEEE 32nd Int. Conf. Softw. Eng., 2010, pp. 435-444.\n[46] X. Yao, M. Harman, and Y. Jia, \"A study of equivalent and stubborn mutation operators using human analysis of equivalence,\" in Proc. 36th Int. Conf. Softw. Eng. (ICSE), Hyderabad, India, 2014, pp. 919-930.\n[47] A. J. Offutt, Automatic Test Data generation. Eastern United States: Georgia Institute of Technology, 1988.\n[48] G. Ji, \"Survey on genetic algorithm,\" Comput. Appl. Softw., vol. 21, no. 2, pp. 69-73, 2004.\n[49] A. J. Offutt, Z. Jin, and J. Pan, \"The dynamic domain reduction procedure for test data generation,\" Softw. Pract. Experience, vol. 29, no. 2, pp. 167-193, 1999.\n\n[50] K. Sen, D. Marinov, and G. Agha, \"CUTE: A concolic unit testing engine for C,\" ACM SIGSOFT Softw. Eng. Notes, vol. 30, no. 5, pp. 263-272, 2005.\n[51] W. Zheng, C. Feng, X. Wu, Y. Huang, and L. Fang, \"Mutation test based test case minimization for concurrent program,\" Comput. Sci., vol. 44, no. 11, pp. 109-113, 2017.\n![img-17.jpeg](img-17.jpeg)\n\nChangqing Wei received the master's degree in applied mathematics from China University of Mining and Technology, in 2020. Currently he is working toward the Ph.D. degree with the School of Mathematics, China University of Mining and Technology. His main research interests include searchbased software testing.\n![img-18.jpeg](img-18.jpeg)\n\nXianginan Yao received the Ph.D. degree in control theory and control engineering from China University of Mining and Technology, in 2011. She is a Professor with the School of Mathematics, China University of Mining and Technology. Her main research interests include intelligence optimization and search based software testing.\n![img-19.jpeg](img-19.jpeg)\n\nDunwei Gong (Senior Member, IEEE) received the Ph.D. degree in control theory and control engineering from China University of Mining and Technology, in 1999. He is a Professor with the College of Automation and Electronic Engineering, Qingdao University of Science and Technology. His main research interests include intelligence optimization and control.\n\nHuai Liu (Senior Member, IEEE) received the B.Eng. degree in physioelectronic technology and M.Eng. degree in communications and information systems, both from Nankai University, China, and the Ph.D. degree in software engineering from the Swinburne University of Technology, Australia. He is a Lecturer with the Department of Computing Technologies, Swinburne University of Technology, Melbourne, Australia. He has worked as a Lecturer with Victoria University and a Research Fellow with RMIT University. Prior to working in higher education he worked as an Engineer in the IT industry. His current research interests include software testing, cloud computing, and end-user software engineering.",
    "references": [
      {
        "ref_id": "1",
        "text": "R. A. Demillo, R. J. Lipton, and F. G. Sayward, \"Hints on test data selection: Help for the practicing programmer,\" Computer, vol. 11, no. 4, pp. 34-41, Apr. 1978."
      },
      {
        "ref_id": "2",
        "text": "R. Just, D. Jalali, L. Inozemtseva, M. D. Ernst, R. Holmes, and G. Fraser, \"Are mutants a valid substitute for real faults in software testing?\" in Proc. 22nd ACM SIGSOFT Int. Symp. Found. Softw. Eng., 2014, pp. 654-665."
      },
      {
        "ref_id": "3",
        "text": "B. H. Smith and L. Williams, \"On guiding the augmentation of an automated test suite via mutation analysis,\" Empirical Softw. Eng., vol. 14, no. 3, pp. 341-369, 2009."
      },
      {
        "ref_id": "4",
        "text": "M. Papadakis and N. Malevris, \"Automatically performing weak mutation with the aid of symbolic execution, concolic testing and searchbased testing,\" Softw. Qual. J., vol. 19, no. 4, pp. 691-723, 2011."
      },
      {
        "ref_id": "5",
        "text": "M. Papadakis and N. Malevris, \"Mutation based test case generation via a path selection strategy,\" Inf. Softw. Technol., vol. 54, no. 9, pp. 915-932, 2012."
      },
      {
        "ref_id": "6",
        "text": "J. Shan, Y. Gao, M. Liu, J. Liu, L. Zhang, and J. Sun, \"A new approach to automated test data generation in mutation testing,\" Chin. J. Comput., vol. 31, no. 6, pp. 1025-1034, 2008."
      },
      {
        "ref_id": "7",
        "text": "J. Shan, J. Wang, Z. Qi, and J. Wu, \"Improved method to generate path-wise test data,\" J. Comput. Sci. Technol., vol. 18, no. 2, pp. 235240, 2003."
      },
      {
        "ref_id": "8",
        "text": "X. Zhao and B. Gu, \"Generation of test cases in mutation testing using genetic algorithm,\" J. Comput. Appl., vol. 29, no. 0z1, pp. 262264, 2009."
      },
      {
        "ref_id": "9",
        "text": "A. J. Offutt and R. H. Untch, \"Mutation 2000: Uniting the orthogonal,\" in Proc. 1st Workshop Mutation Anal. (MUTATION), 2001, pp. 34-44."
      },
      {
        "ref_id": "10",
        "text": "Y. Ma, J. Offutt, and Y. R. Kwon, \"MuJava: An automated class mutation system,\" Softw. Testing, Verification Rel., vol. 15, no. 2, pp. 97133, 2005."
      },
      {
        "ref_id": "11",
        "text": "X. Chen and Q. Gu, \"Mutation testing: Principal, optimization and application,\" J. Frontier Comput. Sci. Technol., vol. 6, no. 12, pp. 10571075, 2012."
      },
      {
        "ref_id": "12",
        "text": "G. Fraser and A. Zeller, \"Mutation-driven generation of unit tests and oracles,\" IEEE Trans. Softw. Eng., vol. 38, no. 2, pp. 278-292, 2012."
      },
      {
        "ref_id": "13",
        "text": "R. Khan, M. Amjad, and A. K. Srivastava, \"Generation of automatic test cases with mutation analysis and hybrid genetic algorithm,\" in Proc. 3rd Int. Conf. Comput. Intell. Commun. Technol. (CICT), 2017, pp. 1-4."
      },
      {
        "ref_id": "14",
        "text": "R. A. DeMilli and A. J. Offutt, \"Constraint-based automatic test data generation,\" IEEE Trans. Softw. Eng., vol. 17, no. 9, pp. 900-910, Sep. 1991."
      },
      {
        "ref_id": "15",
        "text": "X. Yao, G. Zhang, F. Pan, D. Gong, and C. Wei, \"Orderly generation of test data via sorting mutant branches based on their dominance degrees for weak mutation testing,\" IEEE Trans. Softw. Eng., vol. 48, no. 4, pp. 1169-1184, Apr. 2022."
      },
      {
        "ref_id": "16",
        "text": "X. Dang, D. Gong, X. Yao, T. Tian, and H. Liu, \"Enhancement of mutation testing via fuzzy clustering and multi-population genetic algorithm,\" IEEE Trans. Softw. Eng., vol. 48, no. 6, pp. 2141-2156, Jun. 2022."
      },
      {
        "ref_id": "17",
        "text": "C. Wei, X. Yao, D. Gong, and H. Liu, \"Spectral clustering based mutant reduction for mutation testing,\" Inf. Softw. Technol., vol. 132, 2021, Art. no. 106502."
      },
      {
        "ref_id": "18",
        "text": "W. E. Howden, \"Weak mutation testing and completeness of test sets,\" IEEE Trans. Softw. Eng., vol. 8, no. 4, pp. 371-379, Jul. 1982."
      },
      {
        "ref_id": "19",
        "text": "A. J. Offutt and S. D. Lee, \"How strong is weak mutation?\" in Proc. Symp. Testing, 1991, pp. 200-213."
      },
      {
        "ref_id": "20",
        "text": "J. A. Whittaker and J. H. Poore, \"Markov analysis of software specifications,\" ACM Trans. Softw. Eng. Methodol., vol. 2, no. 1, pp. 93108, 1993."
      },
      {
        "ref_id": "21",
        "text": "J. A. Whittaker and M. G. Thomason, \"A Markov chain model for statistical software testing,\" IEEE Trans. Softw. Eng., vol. 20, no. 10, pp. 812-824, Oct. 1994."
      },
      {
        "ref_id": "22",
        "text": "Y. Wang, F. Ye, X. Zhu, and C. Wu, \"A method for software reliability test case design based on Markov chain usage model,\" in Proc. Int. Conf. Qual., Rel., Risk, Maintenance, Saf. Eng., 2013, pp. 1207-1210."
      },
      {
        "ref_id": "23",
        "text": "J. Whittaker and J. Poore, \"Statistical testing for cleanroom software engineering,\" in Proc. 25th Hawaii Int. Conf. Syst. Sci., 1992, pp. $428-436$."
      },
      {
        "ref_id": "24",
        "text": "D. E. Goldberg, Genetic Algorithms in Search, Optimization, and Machine Learning. Reading, MA, USA: Addison-Wesley, 1988."
      },
      {
        "ref_id": "25",
        "text": "Z. Shude and S. Zengqi, \"A survey on estimation of distribution algorithms,\" Acta Automatica Sinica, vol. 33, no. 2, pp. 113-124, 2007."
      },
      {
        "ref_id": "26",
        "text": "D. Goldberg, The Design of Innovation: Lessons from and for Competent Genetic Algorithms. Norwell, MA, USA: Kluwer, 2002."
      },
      {
        "ref_id": "27",
        "text": "J. J. Grefenstette, \"Optimization of control parameters for genetic algorithms,\" IEEE Trans. Syst., Man, Cybern., vol. 16, no. 1, pp. 122128, Jan. 1986."
      },
      {
        "ref_id": "28",
        "text": "H. Lei and L. Chen, \"Test case generation based on Markov chain usage model,\" J. Univ. Electron. Sci. Technol. China, vol. 40, no. 5, pp. 732736, 2011."
      },
      {
        "ref_id": "29",
        "text": "Y. Dong and J. Peng, \"Automatic generation of software test cases based on improved genetic algorithm,\" in Proc. Int. Conf. Multimedia Technol., 2011, pp. 227-230."
      },
      {
        "ref_id": "30",
        "text": "P. Hu and D. Hu, \"Research on automatic generation of string type test data based on genetic algorithms,\" J. Huaihua Univ., vol. 27, no. 8, 2008, Art. no. 3."
      },
      {
        "ref_id": "31",
        "text": "B. Korel, \"Automated software test data generation,\" IEEE Trans. Softw. Eng., vol. 16, no. 8, pp. 870-879, Aug. 1990."
      },
      {
        "ref_id": "32",
        "text": "G. Zhang, \"Test case generation for mutation testing based on set evolution and dominance relation,\" Ph.D. dissertation, China Univ. Mining Technol., Xuzhou, China, 2017."
      },
      {
        "ref_id": "33",
        "text": "Y. Yu, \"Research on key technologies of dynamic hardware and software partitioning,\" Ph.D. dissertation, Tianjin Univ., Tianjin, China, 2011."
      },
      {
        "ref_id": "34",
        "text": "C. Pacheco and M. D. Ernst, \"RANDOOP: Feedback-directed random testing for Java,\" in Proc. Companion 22nd Annu. ACM SIGPLAN Conf. Object-Oriented Program., Syst., Lang., Appl., 2007, pp. 1-2."
      },
      {
        "ref_id": "35",
        "text": "M. Masud, A. Nayak, M. Zaman, and N. Bansal, \"Strategy for mutation testing using genetic algorithms,\" in Proc. Can. Conf. Elect. Comput. Eng., 2005, pp. 1049-1052."
      },
      {
        "ref_id": "36",
        "text": "Y. Du, Y. Pan, H. Ao, N. O. Alexander, and Y. Fan, \"Automatic test case generation and optimization based on mutation testing,\" in Proc. IEEE 19th Int. Conf. Softw. Qual., Rel. Secur. Companion (QRS-C), 2019, pp. 522-523."
      },
      {
        "ref_id": "37",
        "text": "F. C. M. Souza, M. Papadakis, Y. L. Traon, and M. E. Delamaro, \"Strong mutation-based test data generation using hill climbing,\" in Proc. IEEE/ACM 9th Int. Workshop Search-Based Softw. Testing (SBST), 2016, pp. 45-54."
      },
      {
        "ref_id": "38",
        "text": "X. Du, Q. Qiang, and L. Huang, \"A method combined with data flow constraint for generating mutation test cases,\" Softw. Eng. Appl., vol. 7, no. 2, pp. 99-109, 2018."
      },
      {
        "ref_id": "39",
        "text": "S. Liu and Y. Li, \"An auotmatic data generation test method,\" Comput. Eng., vol. 13, no. 5, pp. 26-32, 1987."
      },
      {
        "ref_id": "40",
        "text": "D. Gong, F. Pan, T. Tian, S. Yang, and F. Meng, \"A feedback-directed method of evolutionary test data generation for parallel programs,\" Inf. Softw. Technol., vol. 124, no. 2, pp. 1-15, 2020."
      },
      {
        "ref_id": "41",
        "text": "H. Tanno, X. Zhang, T. Hoshino, and K. Sen, \"TesMa and CATG: Automated test generation tools for models of enterprise applications,\" in Proc. IEEE/ACM 37th IEEE Int. Conf. Softw. Eng., 2015, pp. 717-720."
      },
      {
        "ref_id": "42",
        "text": "K. Lakhotia, M. Harman, and H. Gross, \"AUSTIN: A tool for search based software testing for the C language and its evaluation on deployed automotive systems,\" in Proc. 2nd Int. Symp. Search Based Softw. Eng., 2010, pp. 101-110."
      },
      {
        "ref_id": "43",
        "text": "K. K. Mishra, S. Tiwari, A. Kumar, and A. K. Misra, \"An approach for mutation testing using elitist genetic algorithm,\" in Proc. 3rd Int. Conf. Comput. Sci. Inf. Technol., 2010, pp. 426-429."
      },
      {
        "ref_id": "44",
        "text": "A. P. Mathur and W. E. Wong, \"An empirical comparison of data flow and mutation-based test adequacy criteria,\" Softw. Testing Verification Rel., vol. 4, no. 1, pp. 9-31, 2010."
      },
      {
        "ref_id": "45",
        "text": "L. Zhang, S. Hou, J. Hu, T. Xie, and H. Mei, \"Is operator-based mutant selection superior to random mutant selection?\" in Proc. ACM/IEEE 32nd Int. Conf. Softw. Eng., 2010, pp. 435-444."
      },
      {
        "ref_id": "46",
        "text": "X. Yao, M. Harman, and Y. Jia, \"A study of equivalent and stubborn mutation operators using human analysis of equivalence,\" in Proc. 36th Int. Conf. Softw. Eng. (ICSE), Hyderabad, India, 2014, pp. 919-930."
      },
      {
        "ref_id": "47",
        "text": "A. J. Offutt, Automatic Test Data generation. Eastern United States: Georgia Institute of Technology, 1988."
      },
      {
        "ref_id": "48",
        "text": "G. Ji, \"Survey on genetic algorithm,\" Comput. Appl. Softw., vol. 21, no. 2, pp. 69-73, 2004."
      },
      {
        "ref_id": "49",
        "text": "A. J. Offutt, Z. Jin, and J. Pan, \"The dynamic domain reduction procedure for test data generation,\" Softw. Pract. Experience, vol. 29, no. 2, pp. 167-193, 1999."
      },
      {
        "ref_id": "50",
        "text": "K. Sen, D. Marinov, and G. Agha, \"CUTE: A concolic unit testing engine for C,\" ACM SIGSOFT Softw. Eng. Notes, vol. 30, no. 5, pp. 263-272, 2005."
      },
      {
        "ref_id": "51",
        "text": "W. Zheng, C. Feng, X. Wu, Y. Huang, and L. Fang, \"Mutation test based test case minimization for concurrent program,\" Comput. Sci., vol. 44, no. 11, pp. 109-113, 2017."
      }
    ],
    "reference_count": 51,
    "pattern_matched": "(?:^|\\n)#+\\s*References?\\s*\\n"
  },
  "tables": [
    {
      "table_number": null,
      "table_title": null,
      "headers": [
        "",
        "$\\mathbf{P}$",
        "",
        "",
        "M"
      ],
      "rows": [
        [
          1,
          "public static int max(int a, int <br> b)",
          "",
          1,
          "public static int max(int a, int <br> b)"
        ],
        [
          2,
          "$\\mathrm{if}(\\mathrm{a}<\\mathrm{b})$",
          "",
          2,
          "if(!(a < b))"
        ],
        [
          3,
          "return b;",
          "",
          3,
          "return b;"
        ],
        [
          4,
          "]else[",
          "",
          4,
          "]else["
        ],
        [
          5,
          "return a;",
          "",
          5,
          "return a;"
        ],
        [
          6,
          "]",
          "",
          6,
          "]"
        ],
        [
          7,
          "]",
          "",
          7,
          "]"
        ],
        [
          "",
          "",
          "(a)",
          "",
          "(b)"
        ],
        [
          1,
          "public static int max(int a, int b)",
          "",
          "",
          ""
        ],
        [
          2,
          "",
          "",
          "",
          ""
        ],
        [
          3,
          "",
          "",
          "",
          ""
        ],
        [
          4,
          "",
          "",
          "",
          ""
        ],
        [
          5,
          "",
          "",
          "",
          ""
        ],
        [
          6,
          "",
          "",
          "",
          ""
        ],
        [
          7,
          "",
          "",
          "",
          ""
        ]
      ],
      "row_count": 15,
      "column_count": 5
    },
    {
      "table_number": "I",
      "table_title": "The Mutant Branches",
      "headers": [
        "Mutants",
        "Mutant Branches"
      ],
      "rows": [
        [
          "$M_{1}$",
          "$i f((a<b)!=(!(a<b)))$"
        ],
        [
          "$M_{2}$",
          "$i f((a<b)!=((++a<b)))$"
        ],
        [
          "$M_{3}$",
          "$i f((a<b)!=((a++<b)))$"
        ],
        [
          "$M_{4}$",
          "$i f((a<b)!=((--a<b)))$"
        ],
        [
          "$M_{5}$",
          "$i f((a<b)!=((a--<b)))$"
        ],
        [
          "$M_{6}$",
          "$i f((a<b)!=((a<++b)))$"
        ],
        [
          "$M_{7}$",
          "$i f((a<b)!=((a<b++)))$"
        ],
        [
          "$M_{8}$",
          "$i f((a<b)!=((a<-b)))$"
        ],
        [
          "$M_{9}$",
          "$i f((a<b)!=((a<b--)))$"
        ],
        [
          "$M_{10}$",
          "$i f((a<b!=((a<b)))$"
        ],
        [
          "$M_{11}$",
          "$i f((a<b)!=((\\sim a<b)))$"
        ],
        [
          "$M_{12}$",
          "$i f((b)!=((-b)))$"
        ],
        [
          "$M_{13}$",
          "$i f((b)!=((-b)))$"
        ],
        [
          "$M_{14}$",
          "$i f((b)!=((b++)))$"
        ],
        [
          "$M_{15}$",
          "$i f((b)!=((b--)))$"
        ],
        [
          "$M_{16}$",
          "$i f((a)!=((-a)))$"
        ],
        [
          "$M_{17}$",
          "$i f((a)!=((\\sim a)))$"
        ],
        [
          "$M_{18}$",
          "$i f((a)!=((a++)))$"
        ],
        [
          "$M_{19}$",
          "$i f((a)!=((a--)))$"
        ]
      ],
      "row_count": 19,
      "column_count": 2
    },
    {
      "table_number": null,
      "table_title": null,
      "headers": [
        "1:Mutation operators:Code lines:methods: <br> 2:Operation before mutation $=>$ Operation after mutation",
        ""
      ],
      "rows": [
        [
          110,
          ""
        ],
        [
          212,
          ""
        ],
        [
          19,
          ""
        ],
        [
          29,
          ""
        ],
        [
          39,
          ""
        ],
        [
          "AOIS_4:9:int_max(int,int): $\\mathrm{a}=$ a-",
          ""
        ],
        [
          59,
          ""
        ],
        [
          69,
          ""
        ],
        [
          79,
          ""
        ],
        [
          "AOIS_8:9:int_max(int,int): $\\mathrm{b}=$ b-",
          ""
        ],
        [
          910,
          ""
        ],
        [
          "AOIS_10:10:int_max(int,int): $\\mathrm{b}=$ b-",
          ""
        ],
        [
          1112,
          ""
        ],
        [
          "AOIS_12:12:int_max(int,int): $\\mathrm{a}=$ a-",
          ""
        ],
        [
          19,
          "(a < b)"
        ],
        [
          19,
          ""
        ],
        [
          29,
          ""
        ],
        [
          310,
          ""
        ],
        [
          412,
          ""
        ]
      ],
      "row_count": 19,
      "column_count": 2
    },
    {
      "table_number": null,
      "table_title": null,
      "headers": [
        "1:",
        "public static int max(int a, int b)"
      ],
      "rows": [
        [
          2,
          "if( $(\\mathrm{a}<\\mathrm{b}):=(\\mathrm{t}(\\mathrm{a}<\\mathrm{b})))$"
        ],
        [
          3,
          "if( $(\\mathrm{a}<\\mathrm{b}):=(\\mathrm{a}-1<\\mathrm{b}))$"
        ],
        [
          4,
          "if( $((\\mathrm{a}<\\mathrm{b}):=(\\mathrm{a}+1<\\mathrm{b}))$"
        ],
        [
          5,
          "if( $(\\mathrm{a}<\\mathrm{b}):=(\\mathrm{a}<\\mathrm{b}+1))$"
        ],
        [
          6,
          "if( $(\\mathrm{a}<\\mathrm{b}):=(\\mathrm{a}<\\mathrm{b}+1))$"
        ],
        [
          7,
          "if( $((\\mathrm{a}<\\mathrm{b}):=(\\mathrm{a}<\\mathrm{b})))$"
        ],
        [
          8,
          "if( $((\\mathrm{a}<\\mathrm{b}):=(\\mathrm{a}<\\mathrm{b})))$"
        ],
        [
          9,
          "if( $\\mathrm{a}<\\mathrm{b})$"
        ],
        [
          10,
          "if( $\\mathrm{b}):=(\\mathrm{b})$"
        ],
        [
          11,
          "if( $\\mathrm{b}):=(\\mathrm{b})$"
        ],
        [
          12,
          "return b;"
        ],
        [
          13,
          "\\}"
        ],
        [
          14,
          "else"
        ],
        [
          15,
          "if( $(\\mathrm{a}):=(\\mathrm{a})$"
        ],
        [
          16,
          "if( $(\\mathrm{a}):=(\\mathrm{a})$"
        ],
        [
          17,
          "return a;"
        ],
        [
          18,
          "\\}"
        ],
        [
          19,
          ""
        ]
      ],
      "row_count": 18,
      "column_count": 2
    },
    {
      "table_number": "II",
      "table_title": "The Five Extended Paths Before Reduction",
      "headers": [
        "$S^{e p}$",
        "Expressions of $S^{e p}$"
      ],
      "rows": [
        [
          "$S_{1}^{e p}$",
          "$<$ Start $\\rightarrow A \\rightarrow 1 \\rightarrow 2 \\rightarrow 4 \\rightarrow B \\rightarrow$ End $>$"
        ],
        [
          "$S_{2}^{e p}$",
          "$<$ Start $\\rightarrow A \\rightarrow 1 \\rightarrow 3 \\rightarrow 4 \\rightarrow B \\rightarrow$ End $>$"
        ],
        [
          "$S_{3}^{e p}$",
          "$<$ Start $\\rightarrow A \\rightarrow 5 \\rightarrow 6 \\rightarrow 7 \\rightarrow C \\rightarrow$ End $>$"
        ],
        [
          "$S_{4}^{e p}$",
          "$<$ Start $\\rightarrow A \\rightarrow 5 \\rightarrow 7 \\rightarrow C \\rightarrow$ End $>$"
        ],
        [
          "$S_{5}^{e p}$",
          "$<$ Start $\\rightarrow A \\rightarrow 1 \\rightarrow 4 \\rightarrow B \\rightarrow$ End $>$"
        ]
      ],
      "row_count": 5,
      "column_count": 2
    },
    {
      "table_number": "III",
      "table_title": "The Three Extended Paths After Reduction",
      "headers": [
        "$S^{e p}$",
        "Representations of $S^{e p}$"
      ],
      "rows": [
        [
          "$S_{1}^{e p}$",
          "$<$ Start $\\rightarrow A \\rightarrow 1 \\rightarrow 2 \\rightarrow 4 \\rightarrow B \\rightarrow$ End $>$"
        ],
        [
          "$S_{2}^{e p}$",
          "$<$ Start $\\rightarrow A \\rightarrow 1 \\rightarrow 3 \\rightarrow 4 \\rightarrow B \\rightarrow$ End $>$"
        ],
        [
          "$S_{3}^{e p}$",
          "$<$ Start $\\rightarrow A \\rightarrow 5 \\rightarrow 6 \\rightarrow 7 \\rightarrow C \\rightarrow$ End $>$"
        ]
      ],
      "row_count": 3,
      "column_count": 2
    },
    {
      "table_number": "IV",
      "table_title": "EXPRESSIONS OF SIMPLE PREDICATE BRANCH FUNCTIONS [8]",
      "headers": [
        "$p^{p}$ *simples*",
        "$F_{\\text {simple }}$",
        "$r_{e l}$"
      ],
      "rows": [
        [
          "$\\varepsilon_{1}>\\varepsilon_{2}$",
          "$\\varepsilon_{2}-\\varepsilon_{1}$",
          "$<$"
        ],
        [
          "$\\varepsilon_{1} \\geq \\varepsilon_{2}$",
          "$\\varepsilon_{2}-\\varepsilon_{1}$",
          "$\\leq$"
        ],
        [
          "$\\varepsilon_{1}<\\varepsilon_{2}$",
          "$\\varepsilon_{1}-\\varepsilon_{2}$",
          "$<$"
        ],
        [
          "$\\varepsilon_{1} \\leq \\varepsilon_{2}$",
          "$\\varepsilon_{1}-\\varepsilon_{2}$",
          "$\\leq$"
        ],
        [
          "$\\varepsilon_{1}==\\varepsilon_{2}$",
          "$a b s\\left(\\varepsilon_{1}-\\varepsilon_{2}\\right)$",
          "$==$"
        ],
        [
          "$\\varepsilon_{1}!=c_{2}$",
          "$-a b s\\left(\\varepsilon_{1}-\\varepsilon_{2}\\right)$",
          "$<$"
        ],
        [
          "Notes: $p r_{\\text {simple }}$ is a simple predicate expression, where $\\varepsilon_{1}$",
          "",
          ""
        ],
        [
          "and $\\varepsilon_{2}$ are arithmetic variables, $\\{<, \\leq,>, \\geq,==,!=\\}$",
          "",
          ""
        ],
        [
          "is a set of simple predicates, $F_{\\text {simple }}$ is a simple branch function,",
          "",
          ""
        ],
        [
          "the equivalent expression $F_{\\text {simple }} r_{e l} 0$, where $r_{e l} \\in\\{<, \\leq,==\\}$",
          "",
          ""
        ],
        [
          "is the equivalent predicate after transformation.",
          "",
          ""
        ]
      ],
      "row_count": 11,
      "column_count": 3
    },
    {
      "table_number": "V",
      "table_title": "EXPRESSIONS OF BRANCH FUNCTIONS FOR COMPLEX PREDICATES",
      "headers": [
        "$p r_{\\text {complex }}$",
        "Examples",
        "$F_{\\text {complex }}$"
      ],
      "rows": [
        [
          "$\\& \\&$ (Only)",
          "$p r_{\\text {simple }}^{1} \\& \\& \\cdots p r_{\\text {simple }}^{n}$",
          "$\\max \\left(F_{\\text {simple }}^{1}, \\cdots, F_{\\text {simple }}^{n}\\right)$"
        ],
        [
          "",
          "",
          "$\\cdots, F_{\\text {simple }}^{n}$"
        ]
      ],
      "row_count": 2,
      "column_count": 3
    },
    {
      "table_number": "VI",
      "table_title": "THE RESULTS OF DESIGNING MBFs FOR TYPE I",
      "headers": [
        "Mutation <br> Operators",
        "Descriptive <br> Mutation Operator",
        "Mutant Branch Function $(F)$"
      ],
      "rows": [
        [
          "AOHU",
          "Arithmetic Operator Insertion Unary",
          "$-a b s\\left(v_{1}\\left(-v_{1}\\right)\\right)$"
        ],
        [
          "AODU",
          "Arithmetic Operator Deletion Unary",
          "$-a b s\\left(v_{1}\\left(v_{1}\\right)\\right)$"
        ],
        [
          "AODS",
          "Arithmetic Operator Insertion Short-Cut",
          "$-a b s\\left(v_{1}-v_{2}\\right)$"
        ],
        [
          "AODS",
          "Arithmetic Operator Deletion Short-Cut",
          "$-a b s\\left(v_{1}-v_{2}\\right)$"
        ],
        [
          "AORS",
          "Arithmetic Operator Replacement Short-Cut",
          "$-a b s\\left(v_{1}-v_{2}\\right)$"
        ],
        [
          "LOI",
          "Logical Operator Insertion",
          "$-a b s\\left(v_{1}-v_{2}\\right)$ and $v_{2}=\\left(v_{1}+1\\right)$"
        ],
        [
          "LOD",
          "Logical Operator Deletion",
          "$-a b s\\left(v_{2}-v_{1}\\right)$ and $v_{1}=\\left(v_{2}+1\\right)$"
        ],
        [
          "Notes: $v_{1}$ is variable, constant or array element, and $v_{2}$ is the result of mutation for $v_{1}$",
          "",
          ""
        ]
      ],
      "row_count": 8,
      "column_count": 3
    },
    {
      "table_number": "VII",
      "table_title": "THE RESULTS OF DESIGNING MBFs FOR TYPE II",
      "headers": [
        "Mutation Types - <br> Mutation Operators",
        "Descriptive Mutation Operator",
        "Mutant Branch Function $(F)$"
      ],
      "rows": [
        [
          "Arithmetic Operator Replacement Binary-AORB",
          "$\\varepsilon_{1} r_{o p} \\varepsilon_{2}$",
          "$\\begin{aligned} & -a b s(\\varepsilon_{1} r_{o p} \\varepsilon_{2}) \\\\ & \\quad-\\left(\\varepsilon_{1} r_{o p}^{\\prime} \\varepsilon_{2}\\right) \\end{aligned}$"
        ],
        [
          "Assignment Operator Replacement-ASRS",
          "$\\varepsilon_{1} r_{o p}=\\varepsilon_{2}$",
          "$\\begin{aligned} & -a b s\\left(\\varepsilon_{1} r_{o p} \\varepsilon_{2}\\right) \\\\ & \\quad-\\left(\\varepsilon_{1} r_{o p}^{\\prime} \\varepsilon_{2}\\right) \\end{aligned}$"
        ],
        [
          "",
          "$<=\\alpha>$",
          "$\\varepsilon_{2}-\\varepsilon_{1}$"
        ],
        [
          "",
          "$<=\\alpha \\geq$",
          "$\\varepsilon_{2}-\\varepsilon_{1}$"
        ],
        [
          "Relational Operator Replacement-ROR",
          "$<=\\alpha \\Rightarrow=$",
          "$\\varepsilon_{2}-\\varepsilon_{1}$"
        ],
        [
          "",
          "$<=\\alpha \\leq$",
          "$\\varepsilon_{2}-\\varepsilon_{1}$"
        ],
        [
          "",
          "$<=\\alpha \\uparrow=$",
          "$\\varepsilon_{2}-\\varepsilon_{1}$"
        ],
        [
          "Conditional Operator Insertion-COI",
          "$E_{1}=\\alpha E_{2}$",
          "$F_{E_{1}}$"
        ],
        [
          "Conditional Operator Deletion-COD",
          "$E_{1}=\\alpha E_{2}$",
          "$F_{E_{2}}$"
        ],
        [
          "Conditional Operator Replacement-COR",
          "$E_{1}=\\alpha E_{2}$",
          "$\\begin{gathered} a b s F_{E_{1}}-F_{E_{2}} \\\\ \\hline \\end{gathered}$"
        ],
        [
          "Notes: $\\varepsilon_{1}$ and $\\varepsilon_{2}$ is variable, constant, or array element, $r_{o p}$ and $r_{o p}^{\\prime}$ ( $r_{o p}$ and $\\left.r_{o p}^{\\prime} \\in\\{+,-, *,+, \\%\\}\\right)$ are original binary operation and the binary operation after mutation, $\\Longrightarrow$ is mutation, $E_{i}(i=1,2)$ represents a variable or relational expressions, $F_{E_{i}}$ represents branch function of $E_{i}(i=1,2)$",
          "",
          ""
        ]
      ],
      "row_count": 11,
      "column_count": 3
    },
    {
      "table_number": "VIII",
      "table_title": "Subject Programs and Mutants",
      "headers": [
        "ID",
        "Program",
        "LOCs",
        "Methods",
        "Mutants",
        "Description"
      ],
      "rows": [
        [
          "",
          "",
          "",
          "",
          "Total Equivalent",
          ""
        ],
        [
          1,
          "TeashAndTakeOut",
          30,
          2,
          111,
          29
        ],
        [
          2,
          "Mid",
          26,
          1,
          115,
          18
        ],
        [
          3,
          "FourBalls",
          28,
          1,
          213,
          49
        ],
        [
          4,
          "Triangle",
          36,
          1,
          325,
          40
        ],
        [
          5,
          "Cal",
          46,
          2,
          314,
          43
        ],
        [
          6,
          "HelpFermatter",
          416,
          39,
          291,
          42
        ],
        [
          7,
          "WordUtils",
          173,
          12,
          243,
          34
        ],
        [
          8,
          "NumberUtils",
          636,
          47,
          1406,
          212
        ],
        [
          9,
          "Dfp",
          1702,
          113,
          2133,
          258
        ],
        [
          10,
          "FastMath",
          2311,
          100,
          6486,
          976
        ],
        [
          11,
          "ArrayUtils",
          3258,
          319,
          7551,
          795
        ],
        [
          12,
          "Jdkmath",
          11540,
          173,
          31576,
          3265
        ],
        [
          13,
          "Numbers",
          20205,
          340,
          64955,
          5023
        ],
        [
          14,
          "Colt",
          31407,
          3106,
          93985,
          7749
        ],
        [
          15,
          "Lang",
          53261,
          2106,
          132197,
          9722.0
        ],
        [
          "",
          "Sum.",
          125075,
          6362,
          341901,
          28255
        ]
      ],
      "row_count": 17,
      "column_count": 6
    },
    {
      "table_number": "IX",
      "table_title": "Live Mutants and Equivalent Mutants After Using Randoop",
      "headers": [
        "ID",
        "Total Test Data",
        "Live Equivalent Live/Total (\\%) Equivalent/Total (\\%)",
        "",
        "",
        ""
      ],
      "rows": [
        [
          1,
          111,
          5000,
          29,
          29,
          26.13
        ],
        [
          2,
          115,
          5000,
          18,
          18,
          15.65
        ],
        [
          3,
          213,
          5000,
          50,
          49,
          23.47
        ],
        [
          4,
          325,
          5000,
          42,
          40,
          12.92
        ],
        [
          5,
          314,
          5000,
          45,
          43,
          14.33
        ],
        [
          6,
          291,
          5000,
          42,
          42,
          14.43
        ],
        [
          7,
          243,
          5000,
          35,
          34,
          14.4
        ],
        [
          8,
          1406,
          15000,
          217,
          212,
          15.43
        ],
        [
          9,
          2133,
          15000,
          260,
          258,
          12.19
        ],
        [
          10,
          6486,
          15000,
          980,
          976,
          15.11
        ],
        [
          11,
          7551,
          15000,
          800,
          795,
          10.59
        ],
        [
          12,
          31576,
          15000,
          3269,
          3265,
          10.35
        ],
        [
          13,
          64955,
          15000,
          5027,
          5023,
          7.74
        ],
        [
          14,
          93985,
          25000,
          7754,
          7749,
          8.25
        ],
        [
          15,
          132197,
          25000,
          9727,
          9722,
          7.36
        ],
        [
          "Sum.",
          341901,
          105000,
          28295,
          28255,
          8.28
        ]
      ],
      "row_count": 16,
      "column_count": 6
    },
    {
      "table_number": "X",
      "table_title": "Live Mutants and Equivalent Mutants After Using Randoop",
      "headers": [
        "ID",
        "Total Test Data",
        "Live Equivalent Live/Total (\\%) Equivalent/Total (\\%)",
        "",
        "",
        ""
      ],
      "rows": [
        [
          1,
          111,
          5000,
          29,
          29,
          26.13
        ],
        [
          2,
          115,
          5000,
          18,
          18,
          15.65
        ],
        [
          3,
          213,
          5000,
          50,
          49,
          23.47
        ],
        [
          4,
          325,
          5000,
          42,
          40,
          12.92
        ],
        [
          5,
          314,
          5000,
          45,
          43,
          14.33
        ],
        [
          6,
          291,
          5000,
          42,
          42,
          14.43
        ],
        [
          7,
          243,
          5000,
          35,
          34,
          14.4
        ],
        [
          8,
          1406,
          15000,
          217,
          212,
          15.43
        ],
        [
          9,
          2133,
          15000,
          260,
          258,
          12.19
        ],
        [
          10,
          6486,
          15000,
          980,
          976,
          15.11
        ],
        [
          11,
          7551,
          15000,
          800,
          795,
          10.59
        ],
        [
          12,
          31576,
          15000,
          3269,
          3265,
          10.35
        ],
        [
          13,
          64955,
          15000,
          5027,
          5023,
          7.74
        ],
        [
          14,
          93985,
          25000,
          7754,
          7749,
          8.25
        ],
        [
          15,
          132197,
          25000,
          9727,
          9722,
          7.36
        ],
        [
          "Sum.",
          341901,
          105000,
          28295,
          28255,
          8.28
        ]
      ],
      "row_count": 16,
      "column_count": 6
    },
    {
      "table_number": "X",
      "table_title": "The Range of $\\operatorname{Dif}(M)$ Under Each Mutant Category",
      "headers": [
        "Mutant Category",
        "The Range of $D i f(M)$"
      ],
      "rows": [
        [
          "Easy",
          "$[0,0.25]$"
        ],
        [
          "Middle",
          "$(0.25,0.5]$"
        ],
        [
          "Difficult",
          "$(0.5,0.75]$"
        ],
        [
          "Very difficult",
          "$(0.75,1]$"
        ]
      ],
      "row_count": 4,
      "column_count": 2
    },
    {
      "table_number": "XI",
      "table_title": "The Parameters Used by TAMMEA and Other Five Techniques",
      "headers": [
        "Parameters",
        "Parameter Values",
        "Parameter Description"
      ],
      "rows": [
        [
          "$P^{(0)}$",
          "$(0.5, \\cdots, 0.5)$",
          "Initial probability vector"
        ],
        [
          "Pop",
          100,
          "Population size"
        ],
        [
          "$p_{m}$",
          0.95,
          "Mutation probability"
        ],
        [
          "$p_{c}$",
          0.05,
          "Crossover probability"
        ],
        [
          "$r_{0} / r_{1}$",
          0.5,
          "Benchmarks of $\\alpha$"
        ],
        [
          "$N_{\\text {test }}$",
          5,
          "Number of excellent individuals"
        ],
        [
          "$N_{\\text {sub-size }}$",
          5,
          "Sub-population size"
        ],
        [
          "$N_{\\text {size }}$",
          500,
          "Maximum number of iterations"
        ]
      ],
      "row_count": 8,
      "column_count": 3
    },
    {
      "table_number": "XIII",
      "table_title": "T-Test Results of Comparing TAMMEA and Eight Benchmark Methods",
      "headers": [
        "Comparison <br> Methods",
        "Mean Standard <br> Value Deviation",
        "Standard <br> Error",
        "$\\begin{gathered} 95 \\% \\\\ \\text { Confidence Interval } \\end{gathered}$",
        "p-Value <br> (Bilateral)"
      ],
      "rows": [
        [
          "",
          "Lower Limit",
          "Upper Limit",
          "",
          ""
        ]
      ],
      "row_count": 1,
      "column_count": 5
    },
    {
      "table_number": "XIV",
      "table_title": "The Time of Generating Test Data With TAMMEA Under Each Program",
      "headers": [
        "ID",
        "Time (ms)",
        "ID",
        "Time (ms)",
        "ID",
        "Time (ms)"
      ],
      "rows": [
        [
          1,
          199.18,
          6,
          631.36,
          11,
          9538.36
        ],
        [
          2,
          56.24,
          7,
          212.78,
          12,
          21238.37
        ],
        [
          3,
          200.23,
          8,
          666.06,
          13,
          21138.38
        ],
        [
          4,
          200.37,
          9,
          4196.83,
          14,
          62201.68
        ],
        [
          5,
          500.67,
          10,
          4626.97,
          15,
          99914.69
        ]
      ],
      "row_count": 5,
      "column_count": 6
    },
    {
      "table_number": "XV",
      "table_title": "T-TEST RESULTS OF COMPARING TAMMEA AND RANDOM UNDER THE SAME Time CONSTRAINT",
      "headers": [
        "Comparison <br> Methods",
        "Mean <br> Value",
        "Standard <br> Deviation",
        "Standard <br> Error",
        "95\\% <br> Confidence",
        "",
        "p-Value <br> (Bilateral)"
      ],
      "rows": [
        [
          "",
          "",
          "",
          "",
          "Lower",
          "Upper",
          ""
        ],
        [
          "TAMMEA vs. Random",
          12.38,
          4.45,
          1.15,
          9.92,
          14.85,
          0.0
        ]
      ],
      "row_count": 2,
      "column_count": 7
    }
  ]
}