{
  "metadata": {
    "file_path": "/Users/id05309/Documents/tfm/mistral/mistral-markdown/2023/Marginal Distribution Algorithm for Feature Model Test Configuration Generation.md",
    "filename": "Marginal Distribution Algorithm for Feature Model Test Configuration Generation.md",
    "title": "Marginal Distribution Algorithm for Feature Model Test Configuration Generation",
    "year": "2023"
  },
  "references": {
    "header": "## REFERENCES",
    "content": "[1] D. Hinterreiter, K. Feichtinger, L. Linsbauer, H. Prähofer, and P. Grünbacher, \"Supporting feature model evolution by lifting code-level dependencies: A research preview,\" in Requirements Engineering:\n\nFoundation for Software Quality: 25th International Working Conference, REFSQ 2019, Essen, Germany, March 18-21, 2019, Proceedings 25, 2019, pp. 169-175.\n[2] C. Henard, M. Papadakis, G. Perrouin, J. Klein, P. Heymans, and Y. le Traon, \"Bypassing the Combinatorial Explosion: Using Similarity to Generate and Prioritize T-Wise Test Configurations for Software Product Lines,\" Softw. Eng. IEEE Trans., vol. 40, no. 7, pp. 650-670, 2014, doi: http://doi.org/10.1109/TSE.2014.2327020.\n[3] M. F. Johansen, Ø. Haugen, and F. Fleurey, \"An algorithm for generating t-wise covering arrays from large feature models,\" in Proceedings of the 16th International Software Product Line Conference-Volume 1, 2012, pp. 46-55. doi: 10.1145/2362536.2362547.\n[4] A. Bajaj and O. P. Sangwan, \"A systematic literature review of test case prioritization using genetic algorithms,\" IEEE Access, vol. 7, pp. $126355-126375,2019$.\n[5] C. Henard, M. Papadakis, M. Harman, and Y. Le Traon, \"Combining multi-objective search and constraint solving for configuring large software product lines,\" in 2015 IEEE/ACM 37th IEEE International Conference on Software Engineering, 2015, vol. 1, pp. 517-528.\n[6] N. Khoshniat, A. Jamarani, A. Ahmadzadeh, M. Haghi Kashani, and E. Mahdipour, \"Nature-inspired metaheuristic methods in software testing,\" Soft Comput., pp. 1-42, 2023.\n[7] M. Mendonca, M. Branco, and D. Cowan, \"SPLOT: software product lines online tools,\" in Proceedings of the 24th ACM SIGPLAN conference companion on Object oriented programming systems languages and applications, 2009, pp. 761-762.\n[8] D. M. Cohen, S. R. Dalal, J. Parelius, and G. C. Patton, \"The combinatorial design approach to automatic test generation,\" IEEE Softw., vol. 13, no. 5, p. 83, 1996.\n[9] D. Gupta and L. Sharma, \"Improved Combinatorial Algorithms Test for Pairwise Testing Used for Testing Data Generation in Big Data Applications,\" in Artificial Intelligence, Chapman and Hall/CRC, 2021, pp. 81-90.\n[10] J. Ferrer, F. Chicano, and J. A. Ortega-Toro, \"CMSA algorithm for solving the prioritized pairwise test data generation problem in software product lines,\" J. Heuristics, vol. 27, pp. 229-249, 2021.\n[11] L. Yu, F. Duan, Y. Lei, R. N. Kacker, and D. R. Kuhn, \"Combinatorial Test Generation for Software Product Lines Using Minimum Invalid Tuples,\" in 15th International Symposium on High-Assurance Systems Engineering (HASE), 2014, pp. 65-72. doi: 10.1109/HASE.2014.18.\n[12] P. Ramgoada and V. Chandraprakash, \"Constraints handling in combinatorial interaction testing using multi-objective crow search and fruitfly optimization,\" Soft Comput., vol. 23, no. 8, pp. 2713-2726, 2019, doi: 10.1007/s00500-019-03795-w.\n[13] E. N. Haslinger, R. E. Lopez-Herrejon, and A. Egyed, \"Improving CASA runtime performance by exploiting basic feature model analysis,\" arXiv Prepr. arXiv1311.7313, 2013.\n[14] J. Ceberio, A. Mendiburu, and J. A. Lozano, \"A roadmap for solving optimization problems with estimation of distribution algorithms,\" Nat. Comput., pp. 1-15, 2022.\n[15] A. Shirazi, J. Ceberio, and J. A. Lozano, \"EDA++: Estimation of distribution algorithms with feasibility conserving mechanisms for constrained continuous optimization,\" IEEE Trans. Evol. Comput., vol. 26, no. 5, pp. 1144-1156, 2022.\n[16] S. Shakya and R. Santana, \"A Review of Estimation of Distribution Algorithms and Markov Networks,\" in Markov Networks in Evolutionary Computation, vol. 14, S. Shakya and R. Santana, Eds. Springer Berlin Heidelberg, 2012, pp. 21-37. doi: 10.1007/978-3-642-28900-2_2.\n[17] D. Simon, \"Estimation of Distribution Algorithms,\" in Evolutionary Optimization Algorithms, John Wiley \\& Sons, 2013, pp. 313-347.\n[18] M. Pelikan, M. Hauschild, and F. Lobo, \"Estimation of Distribution Algorithms,\" in Springer Handbook of Computational Intelligence, J. Kacprzyk and W. Pedrycz, Eds. Springer Berlin Heidelberg, 2015, pp. 899-928. doi: 10.1007/978-3-662-43505-2_45.\n[19] R. Sagarna and J. Lozano, \"Software Metrics Mining to Predict the Performance of Estimation of Distribution Algorithms in Test Data Generation,\" in Knowledge-Driven Computing, vol. 102, C. Cotta, S. Reich, R. Schaefer, and A. Ligeza, Eds. Springer Berlin Heidelberg, 2008, pp. 235-254. doi: 10.1007/978-3-540-77475-4_15.\n[20] R. Sagarna, A. Arcuri, and Y. Xin, \"Estimation of distribution algorithms for testing object oriented software,\" in Evolutionary Computation, 2007. CEC 2007. IEEE Congress on, 2007, pp. 438-444. doi: $10.1109 /$ cec. 2007.4424504.\n[21] R. Sagarna and J. A. Lozano, \"Scatter Search in software testing, comparison and collaboration with Estimation of Distribution Algorithms,\" Eur. J. Oper. Res., vol. 169, no. 2, pp. 392-412, 2006, doi: http://dx.doi.org/10.1016/j.ejor.2004.08.006.\n[22] N. Sadat Jalali, H. Izadkhah, and S. Lotfi, \"Multi-objective search-based software modularization: structural and non-structural features,\" Soft Comput., vol. 23, no. 21, pp. 11141-11165, 2019, doi: 10.1007/s00500-018-3666-z.\n[23] S. Bahuja and S. Davies, \"Fast probabilistic modeling for combinatorial optimization,\" in AAAI/IAAI, 1998, pp. 469-476.\n[24] J. Staunton and J. Clark, \"Applications of Model Reuse When Using Estimation of Distribution Algorithms to Test Concurrent Software,\" in Search Based Software Engineering, vol. 6956, M. Cohen and M. Ó Cinnéide, Eds. Springer Berlin Heidelberg, 2011, pp. 97-111. doi: 10.1007/978-3-642-23716-4_12.\n[25] C. Jin and S.-W. Jin, \"Software reliability prediction model based on support vector regression with improved estimation of distribution algorithms,\" Appl. Soft Comput., vol. 15, pp. 113-120, 2014, doi: http://dx.doi.org/10.1016/j.asoc.2013.10.016.\n[26] M. Pelikan and H. Mühlenbein, \"Marginal distributions in evolutionary algorithms,\" in Proceedings of the International Conference on Genetic Algorithms Mendel, 1998, vol. 98, pp. 90-95.\n[27] M. Hauschild and M. Pelikan, \"An introduction and survey of estimation of distribution algorithms,\" Swarm Evol. Comput., vol. 1, no. 3, pp. 111-128, 2011, doi: http://dx.doi.org/10.1016/j.swevo.2011.08.003.\n[28] M. Pelikan and H. Mühlenbein, \"The bivariate marginal distribution algorithm,\" in Advances in Soft Computing, Springer, 1999, pp. 521535 .\n[29] L. Yu, F. Duan, Y. Lei, R. N. Kacker, and D. R. Kuhn, \"Combinatorial test generation for software product lines using minimum invalid tuples,\" in High-Assurance Systems Engineering (HASE), 2014 IEEE 15th International Symposium on, 2014, pp. 65-72.\n[30] G. Perrouin, S. Oster, S. Sen, J. Klein, B. Baudry, and Y. Le Traon, \"Pairwise testing for software product lines: comparison of two approaches,\" Softw. Qual. J., vol. 20, no. 3-4, pp. 605-643, 2012, doi: 10.1007/s11219-011-9160-9.\n[31] M. Z. Sahid, A. B. M. Sultan, A. A. A. Ghani, and S. Baharom, \"Combinatorial Interaction Testing of Software Product Lines: A Mapping Study,\" J. Comput. Sci., vol. 12, no. 8, pp. 379-398, 2016, doi: http://dx.doi.org/10.3844/jcssp.2016.379.398.\n[32] R. Santana, P. Larranaga, and J. A. Lozano, \"Learning factorizations in estimation of distribution algorithms using affinity propagation,\" Evol. Comput., vol. 18, no. 4, pp. 515-546, 2010.\n\n© 2023. This work is licensed under\nhttp://creativecommons.org/licenses/by/4.0/ (the \"License\"). Notwithstanding the ProQuest Terms and Conditions, you may use this content in accordance with the terms of the License.",
    "references": [
      {
        "ref_id": "1",
        "text": "D. Hinterreiter, K. Feichtinger, L. Linsbauer, H. Prähofer, and P. Grünbacher, \"Supporting feature model evolution by lifting code-level dependencies: A research preview,\" in Requirements Engineering:"
      },
      {
        "ref_id": "2",
        "text": "C. Henard, M. Papadakis, G. Perrouin, J. Klein, P. Heymans, and Y. le Traon, \"Bypassing the Combinatorial Explosion: Using Similarity to Generate and Prioritize T-Wise Test Configurations for Software Product Lines,\" Softw. Eng. IEEE Trans., vol. 40, no. 7, pp. 650-670, 2014, doi: http://doi.org/10.1109/TSE.2014.2327020."
      },
      {
        "ref_id": "3",
        "text": "M. F. Johansen, Ø. Haugen, and F. Fleurey, \"An algorithm for generating t-wise covering arrays from large feature models,\" in Proceedings of the 16th International Software Product Line Conference-Volume 1, 2012, pp. 46-55. doi: 10.1145/2362536.2362547."
      },
      {
        "ref_id": "4",
        "text": "A. Bajaj and O. P. Sangwan, \"A systematic literature review of test case prioritization using genetic algorithms,\" IEEE Access, vol. 7, pp. $126355-126375,2019$."
      },
      {
        "ref_id": "5",
        "text": "C. Henard, M. Papadakis, M. Harman, and Y. Le Traon, \"Combining multi-objective search and constraint solving for configuring large software product lines,\" in 2015 IEEE/ACM 37th IEEE International Conference on Software Engineering, 2015, vol. 1, pp. 517-528."
      },
      {
        "ref_id": "6",
        "text": "N. Khoshniat, A. Jamarani, A. Ahmadzadeh, M. Haghi Kashani, and E. Mahdipour, \"Nature-inspired metaheuristic methods in software testing,\" Soft Comput., pp. 1-42, 2023."
      },
      {
        "ref_id": "7",
        "text": "M. Mendonca, M. Branco, and D. Cowan, \"SPLOT: software product lines online tools,\" in Proceedings of the 24th ACM SIGPLAN conference companion on Object oriented programming systems languages and applications, 2009, pp. 761-762."
      },
      {
        "ref_id": "8",
        "text": "D. M. Cohen, S. R. Dalal, J. Parelius, and G. C. Patton, \"The combinatorial design approach to automatic test generation,\" IEEE Softw., vol. 13, no. 5, p. 83, 1996."
      },
      {
        "ref_id": "9",
        "text": "D. Gupta and L. Sharma, \"Improved Combinatorial Algorithms Test for Pairwise Testing Used for Testing Data Generation in Big Data Applications,\" in Artificial Intelligence, Chapman and Hall/CRC, 2021, pp. 81-90."
      },
      {
        "ref_id": "10",
        "text": "J. Ferrer, F. Chicano, and J. A. Ortega-Toro, \"CMSA algorithm for solving the prioritized pairwise test data generation problem in software product lines,\" J. Heuristics, vol. 27, pp. 229-249, 2021."
      },
      {
        "ref_id": "11",
        "text": "L. Yu, F. Duan, Y. Lei, R. N. Kacker, and D. R. Kuhn, \"Combinatorial Test Generation for Software Product Lines Using Minimum Invalid Tuples,\" in 15th International Symposium on High-Assurance Systems Engineering (HASE), 2014, pp. 65-72. doi: 10.1109/HASE.2014.18."
      },
      {
        "ref_id": "12",
        "text": "P. Ramgoada and V. Chandraprakash, \"Constraints handling in combinatorial interaction testing using multi-objective crow search and fruitfly optimization,\" Soft Comput., vol. 23, no. 8, pp. 2713-2726, 2019, doi: 10.1007/s00500-019-03795-w."
      },
      {
        "ref_id": "13",
        "text": "E. N. Haslinger, R. E. Lopez-Herrejon, and A. Egyed, \"Improving CASA runtime performance by exploiting basic feature model analysis,\" arXiv Prepr. arXiv1311.7313, 2013."
      },
      {
        "ref_id": "14",
        "text": "J. Ceberio, A. Mendiburu, and J. A. Lozano, \"A roadmap for solving optimization problems with estimation of distribution algorithms,\" Nat. Comput., pp. 1-15, 2022."
      },
      {
        "ref_id": "15",
        "text": "A. Shirazi, J. Ceberio, and J. A. Lozano, \"EDA++: Estimation of distribution algorithms with feasibility conserving mechanisms for constrained continuous optimization,\" IEEE Trans. Evol. Comput., vol. 26, no. 5, pp. 1144-1156, 2022."
      },
      {
        "ref_id": "16",
        "text": "S. Shakya and R. Santana, \"A Review of Estimation of Distribution Algorithms and Markov Networks,\" in Markov Networks in Evolutionary Computation, vol. 14, S. Shakya and R. Santana, Eds. Springer Berlin Heidelberg, 2012, pp. 21-37. doi: 10.1007/978-3-642-28900-2_2."
      },
      {
        "ref_id": "17",
        "text": "D. Simon, \"Estimation of Distribution Algorithms,\" in Evolutionary Optimization Algorithms, John Wiley \\& Sons, 2013, pp. 313-347."
      },
      {
        "ref_id": "18",
        "text": "M. Pelikan, M. Hauschild, and F. Lobo, \"Estimation of Distribution Algorithms,\" in Springer Handbook of Computational Intelligence, J. Kacprzyk and W. Pedrycz, Eds. Springer Berlin Heidelberg, 2015, pp. 899-928. doi: 10.1007/978-3-662-43505-2_45."
      },
      {
        "ref_id": "19",
        "text": "R. Sagarna and J. Lozano, \"Software Metrics Mining to Predict the Performance of Estimation of Distribution Algorithms in Test Data Generation,\" in Knowledge-Driven Computing, vol. 102, C. Cotta, S. Reich, R. Schaefer, and A. Ligeza, Eds. Springer Berlin Heidelberg, 2008, pp. 235-254. doi: 10.1007/978-3-540-77475-4_15."
      },
      {
        "ref_id": "20",
        "text": "R. Sagarna, A. Arcuri, and Y. Xin, \"Estimation of distribution algorithms for testing object oriented software,\" in Evolutionary Computation, 2007. CEC 2007. IEEE Congress on, 2007, pp. 438-444. doi: $10.1109 /$ cec. 2007.4424504."
      },
      {
        "ref_id": "21",
        "text": "R. Sagarna and J. A. Lozano, \"Scatter Search in software testing, comparison and collaboration with Estimation of Distribution Algorithms,\" Eur. J. Oper. Res., vol. 169, no. 2, pp. 392-412, 2006, doi: http://dx.doi.org/10.1016/j.ejor.2004.08.006."
      },
      {
        "ref_id": "22",
        "text": "N. Sadat Jalali, H. Izadkhah, and S. Lotfi, \"Multi-objective search-based software modularization: structural and non-structural features,\" Soft Comput., vol. 23, no. 21, pp. 11141-11165, 2019, doi: 10.1007/s00500-018-3666-z."
      },
      {
        "ref_id": "23",
        "text": "S. Bahuja and S. Davies, \"Fast probabilistic modeling for combinatorial optimization,\" in AAAI/IAAI, 1998, pp. 469-476."
      },
      {
        "ref_id": "24",
        "text": "J. Staunton and J. Clark, \"Applications of Model Reuse When Using Estimation of Distribution Algorithms to Test Concurrent Software,\" in Search Based Software Engineering, vol. 6956, M. Cohen and M. Ó Cinnéide, Eds. Springer Berlin Heidelberg, 2011, pp. 97-111. doi: 10.1007/978-3-642-23716-4_12."
      },
      {
        "ref_id": "25",
        "text": "C. Jin and S.-W. Jin, \"Software reliability prediction model based on support vector regression with improved estimation of distribution algorithms,\" Appl. Soft Comput., vol. 15, pp. 113-120, 2014, doi: http://dx.doi.org/10.1016/j.asoc.2013.10.016."
      },
      {
        "ref_id": "26",
        "text": "M. Pelikan and H. Mühlenbein, \"Marginal distributions in evolutionary algorithms,\" in Proceedings of the International Conference on Genetic Algorithms Mendel, 1998, vol. 98, pp. 90-95."
      },
      {
        "ref_id": "27",
        "text": "M. Hauschild and M. Pelikan, \"An introduction and survey of estimation of distribution algorithms,\" Swarm Evol. Comput., vol. 1, no. 3, pp. 111-128, 2011, doi: http://dx.doi.org/10.1016/j.swevo.2011.08.003."
      },
      {
        "ref_id": "28",
        "text": "M. Pelikan and H. Mühlenbein, \"The bivariate marginal distribution algorithm,\" in Advances in Soft Computing, Springer, 1999, pp. 521535 ."
      },
      {
        "ref_id": "29",
        "text": "L. Yu, F. Duan, Y. Lei, R. N. Kacker, and D. R. Kuhn, \"Combinatorial test generation for software product lines using minimum invalid tuples,\" in High-Assurance Systems Engineering (HASE), 2014 IEEE 15th International Symposium on, 2014, pp. 65-72."
      },
      {
        "ref_id": "30",
        "text": "G. Perrouin, S. Oster, S. Sen, J. Klein, B. Baudry, and Y. Le Traon, \"Pairwise testing for software product lines: comparison of two approaches,\" Softw. Qual. J., vol. 20, no. 3-4, pp. 605-643, 2012, doi: 10.1007/s11219-011-9160-9."
      },
      {
        "ref_id": "31",
        "text": "M. Z. Sahid, A. B. M. Sultan, A. A. A. Ghani, and S. Baharom, \"Combinatorial Interaction Testing of Software Product Lines: A Mapping Study,\" J. Comput. Sci., vol. 12, no. 8, pp. 379-398, 2016, doi: http://dx.doi.org/10.3844/jcssp.2016.379.398."
      },
      {
        "ref_id": "32",
        "text": "R. Santana, P. Larranaga, and J. A. Lozano, \"Learning factorizations in estimation of distribution algorithms using affinity propagation,\" Evol. Comput., vol. 18, no. 4, pp. 515-546, 2010."
      }
    ],
    "reference_count": 32,
    "pattern_matched": "(?:^|\\n)#+\\s*References?\\s*\\n"
  },
  "tables": [
    {
      "table_number": null,
      "table_title": null,
      "headers": [
        "1: OnlineBookstore",
        "2: Front_Store"
      ],
      "rows": [
        [
          3,
          4
        ],
        [
          5,
          6
        ],
        [
          7,
          8
        ],
        [
          9,
          10
        ],
        [
          11,
          12
        ],
        [
          13,
          14
        ],
        [
          15,
          16
        ],
        [
          17,
          18
        ],
        [
          19,
          20
        ],
        [
          21,
          22
        ],
        [
          23,
          24
        ],
        [
          25,
          ""
        ]
      ],
      "row_count": 12,
      "column_count": 2
    },
    {
      "table_number": null,
      "table_title": null,
      "headers": [
        "Pair of features, pf e \\{ $(-3,20),(-3,21),(5,19),(-5,20),(5,22),(-5,23)$,",
        ""
      ],
      "rows": [
        [
          "$(-6,18),(8,9),(8,19),(8,21),(-8,23),(-9,19),(9,23),(-10,20),(-10,23)$,",
          ""
        ],
        [
          "$(11,19),(11,22),(-11,23),(12,19),(12,22),(-12,23),(-16,23),(19,23)$,",
          ""
        ],
        [
          "$(20,22),(21,24),(21,-25),(22,-24),(22,25)\\}$",
          ""
        ]
      ],
      "row_count": 3,
      "column_count": 2
    },
    {
      "table_number": null,
      "table_title": null,
      "headers": [
        "Test Configuration, 20",
        ""
      ],
      "rows": [
        [
          "$01:(1,2,-3,4,-5,-6,7,-8,-9,-10,-11,-12,13,14,15,16,17,-18,19,-20,-21,22,-23,-24,25)$",
          ""
        ],
        [
          "$02:(1,2,-3,4,-5,-6,7,-8,-9,-10,-11,-12,13,14,15,-16,-17,-18,-19,-20,-21,22,-23,-24,25)$",
          ""
        ],
        [
          "$03:(1,2,-3,4,5,-6,7,-8,-9,10,11,-12,13,14,15,-16,17,-18,-19,-20,-21,22,-23,-24,25)$",
          7
        ],
        [
          "$04:(1,2,-3,4,5,-6,7,-8,-9,10,11,-12,13,14,15,16,17,-18,-19,-20,-21,22,-23,-24,25)$",
          6
        ],
        [
          "$05:(1,2,-3,4,-5,6,7,-8,9,10,-11,-12,13,14,15,16,17,-18,-19,-20,-21,-22,23,-24,25)$",
          6
        ],
        [
          "$06:(1,2,-3,4,5,-6,7,-8,9,-10,11,12,13,14,15,-16,-17,-18,-19,-20,-21,22,-23,-24,25)$",
          6
        ],
        [
          "$07:(1,2,-3,4,-5,-6,7,-8,-9,10,-11,-12,13,14,15,16,17,-18,-19,-20,-21,-22,23,-24,-25)$",
          5
        ],
        [
          "$08:(1,2,-3,4,-5,-6,7,-8,-9,10,-11,-12,13,14,15,16,-17,-18,-19,-20,-21,-22,23,-24,-25)$",
          5
        ],
        [
          "$09:(1,2,-3,4,5,-6,7,-8,9,10,11,-12,13,14,15,-16,17,-18,-19,-20,-21,-22,23,-24,25)$",
          4
        ],
        [
          "$10:(1,2,-3,4,5,-6,7,-8,9,10,11,-12,13,14,15,16,-17,-18,-19,-20,-21,-22,23,-24,25)$",
          4
        ]
      ],
      "row_count": 10,
      "column_count": 2
    },
    {
      "table_number": null,
      "table_title": null,
      "headers": [
        "Feature Pair",
        "Chi-square"
      ],
      "rows": [
        [
          "$(8,19)$",
          10.0
        ],
        [
          "$(24,25)$",
          10.0
        ],
        [
          "$(22,23)$",
          6.6
        ],
        [
          "$(5,11)$",
          6.4
        ],
        [
          "$(10,18)$",
          4.5
        ],
        [
          "$(3,24)$",
          4.5
        ],
        [
          "$(5,22)$",
          4.4
        ],
        [
          "$(8,22)$",
          4.4
        ],
        [
          "$(12,22)$",
          4.4
        ],
        [
          "$(8,20)$",
          4.4
        ],
        [
          "$(6,8)$",
          4.4
        ],
        [
          "Other pair",
          "$<3.84$"
        ]
      ],
      "row_count": 12,
      "column_count": 2
    },
    {
      "table_number": null,
      "table_title": null,
      "headers": [
        "Datasets",
        "$\\begin{aligned} & \\text { 学 } \\\\ & \\text { 学 } \\\\ & \\text { 学 } \\end{aligned}$",
        "$\\begin{aligned} & \\text { 学 } \\\\ & \\text { 学 } \\\\ & \\text { 学 } \\end{aligned}$",
        "$\\begin{aligned} & \\text { TC Generation Techniques } \\\\ & \\text { COTED } \\end{aligned}$",
        "ICPL",
        "LOOKUP"
      ],
      "rows": [
        [
          "Ecommerce",
          10,
          10,
          6,
          7,
          6
        ],
        [
          "Cellphone",
          11,
          14,
          7,
          8,
          7
        ],
        [
          "GraphProductLine",
          20,
          30,
          15,
          17,
          15
        ],
        [
          "SPLSimulES",
          32,
          25,
          10,
          10,
          11
        ],
        [
          "ArcadeGame",
          61,
          87,
          16,
          18,
          16
        ],
        [
          2,
          77,
          86,
          19,
          18,
          17
        ],
        [
          "Billing",
          88,
          89,
          13,
          14,
          13
        ],
        [
          "CocheEcologico",
          94,
          131,
          92,
          93,
          90
        ]
      ],
      "row_count": 8,
      "column_count": 6
    },
    {
      "table_number": "I",
      "table_title": "MEDIAN AND STANDARD DEVIATION $(\\sigma)$ OF T-WISE FREQUENCY",
      "headers": [
        "![img-3.jpeg](img-3.jpeg)",
        "COTED",
        "",
        "ICPL",
        "",
        "LOOKUP",
        ""
      ],
      "rows": [
        [
          "",
          "Median",
          "$\\sigma$",
          "Median",
          "$\\sigma$",
          "Median",
          "$\\sigma$"
        ],
        [
          "ECommerce",
          0.33,
          0.1634,
          0.29,
          0.191,
          0.33,
          0.1634
        ],
        [
          "Cellphone",
          0.29,
          0.1615,
          0.38,
          0.1636,
          0.29,
          0.1615
        ],
        [
          "SPL-SimulES",
          0.3,
          0.1498,
          0.3,
          0.1543,
          0.27,
          0.147
        ],
        [
          "ArcadeGamePL",
          0.31,
          0.1695,
          0.28,
          0.2101,
          0.31,
          0.1771
        ],
        [
          "Graph Product Line",
          0.27,
          0.228,
          0.29,
          0.2289,
          0.27,
          0.2263
        ],
        [
          2,
          0.26,
          0.144,
          0.28,
          0.1566,
          0.29,
          0.1391
        ],
        [
          "Billing",
          0.4,
          0.153,
          0.36,
          0.1782,
          0.38,
          0.1553
        ],
        [
          "Coche-ecologico",
          0.33,
          0.2488,
          0.13,
          0.3353,
          0.32,
          0.253
        ],
        [
          "Average",
          0.311,
          0.177,
          0.288,
          0.202,
          0.307,
          0.177
        ]
      ],
      "row_count": 10,
      "column_count": 7
    },
    {
      "table_number": "II",
      "table_title": "MEDIAN AND STANDARD DEVIATION ( $\\sigma$ ) OF TEST CONDIGURATION SIMILARITY",
      "headers": [
        "Technologies",
        "COTED",
        "",
        "ICPL",
        "",
        "LOOKUP",
        ""
      ],
      "rows": [
        [
          "",
          "Median",
          "$\\sigma$",
          "Median",
          "$\\sigma$",
          "Median",
          "$\\sigma$"
        ],
        [
          "ECommerce",
          0.67,
          0.6581,
          1,
          0.8064,
          0.67,
          0.6489
        ],
        [
          "Cellphone",
          1.1,
          0.8134,
          1.2,
          0.8955,
          1.3,
          0.7188
        ],
        [
          "SPL-SimulES",
          1.4,
          1.0682,
          1.4,
          1.0199,
          1.6,
          1.1632
        ],
        [
          "ArcadeGamePL",
          2.45,
          1.9168,
          2.9,
          2.2197,
          2.55,
          1.9063
        ],
        [
          "Graph Product Line",
          2.9,
          2.1399,
          3.35,
          2.4305,
          2.7,
          2.1715
        ],
        [
          2,
          3,
          2.2429,
          2.7,
          2.1194,
          2.6,
          1.9755
        ],
        [
          "Billing",
          3.3,
          2.3822,
          2.9,
          2.2185,
          2.8,
          2.0049
        ],
        [
          "Coche-ecologico",
          17,
          13.6009,
          21,
          14.3204,
          17,
          13.3103
        ],
        [
          "Average",
          3.977,
          3.102,
          4.556,
          3.253,
          3.902,
          2.987
        ]
      ],
      "row_count": 10,
      "column_count": 7
    }
  ]
}