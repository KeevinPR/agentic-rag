{
  "metadata": {
    "file_path": "/Users/id05309/Documents/tfm/mistral/mistral-markdown/2005/Parallel island-based estimation of distribution algorithms for wireless network planning.md",
    "filename": "Parallel island-based estimation of distribution algorithms for wireless network planning.md",
    "title": "Parallel island-based estimation of distribution algorithms for wireless network planning",
    "year": "2005"
  },
  "references": {
    "header": "## REFERENCE",
    "content": "[1] Patrice Calegaria, Frederic Guideca \\& Pierre Kuonena, et. Combinatorial optimization algorithms for radio network planning. Theoretical Computer Science 263 (2001) $235-245$\n[2] Patrice Calegaria, Frederic Guideca \\& Pierre Kuonena, et. Parallel IslandBased Genetic Algorithm for Radio Network Design. JOURNAL OF PARALLEL AND DISTRIBUTED COMPUTING 47, 86-90 (1997)\n[3] Bahai, A.R.S.; Aghvami, H.; Network planning and optimization in the third generation wireless networks; 3G Mobile Communication Technologies, 2000. First International Conference on (IEE Conf. Publ. No. 471) 27-29 March 2000 Page(s):441 - 445\n[4] Qin Heren, Guan Lin, XieShengli; An Improved Genetic Algorithm for Transceiver Placement Problem in Radio Network Design, computer engineering and application, 2004(15) 72-73\n[5] Larranage \\& Lozano, Estimation of Distribution Algorithms: A New Tool for Evolutionary Computation, Kluwer Academic Publishers, 2001.\n[6]Endika Bengoetxea, Inexact Graph Matching Using Estimation of Distribution Algorithms, doctoral thesis, 2002:43-76.\n[7] Lienig J. A parallel genetic algorithm for performance-driven VLSI rout ing [J ]. IEEE Transon EC, 1997, 1 (1) :29-39.",
    "references": [
      {
        "ref_id": "1",
        "text": "Patrice Calegaria, Frederic Guideca \\& Pierre Kuonena, et. Combinatorial optimization algorithms for radio network planning. Theoretical Computer Science 263 (2001) $235-245$"
      },
      {
        "ref_id": "2",
        "text": "Patrice Calegaria, Frederic Guideca \\& Pierre Kuonena, et. Parallel IslandBased Genetic Algorithm for Radio Network Design. JOURNAL OF PARALLEL AND DISTRIBUTED COMPUTING 47, 86-90 (1997)"
      },
      {
        "ref_id": "3",
        "text": "Bahai, A.R.S.; Aghvami, H.; Network planning and optimization in the third generation wireless networks; 3G Mobile Communication Technologies, 2000. First International Conference on (IEE Conf. Publ. No. 471) 27-29 March 2000 Page(s):441 - 445"
      },
      {
        "ref_id": "4",
        "text": "Qin Heren, Guan Lin, XieShengli; An Improved Genetic Algorithm for Transceiver Placement Problem in Radio Network Design, computer engineering and application, 2004(15) 72-73"
      },
      {
        "ref_id": "5",
        "text": "Larranage \\& Lozano, Estimation of Distribution Algorithms: A New Tool for Evolutionary Computation, Kluwer Academic Publishers, 2001."
      },
      {
        "ref_id": "7",
        "text": "Lienig J. A parallel genetic algorithm for performance-driven VLSI rout ing [J ]. IEEE Transon EC, 1997, 1 (1) :29-39."
      }
    ],
    "reference_count": 6,
    "pattern_matched": "(?:^|\\n)#+\\s*References?\\s*\\n"
  },
  "tables": [
    {
      "table_number": "I",
      "table_title": "Convergence Generation And Value OF Different Methods",
      "headers": [
        "",
        "$\\mathrm{NM}^{\\mathrm{b}}$",
        "$\\mathrm{ODR}^{\\mathrm{c}}$",
        "$\\mathrm{DDR}^{\\mathrm{c}}$",
        "$\\mathrm{MDR}^{\\mathrm{c}}$"
      ],
      "rows": [
        [
          "$1^{\\text {st }}$ test",
          727,
          63,
          69,
          920
        ],
        [
          "$2^{\\text {nd }}$ test",
          406,
          165,
          326,
          360
        ],
        [
          "$3^{\\text {rd }}$ test",
          302,
          99,
          100,
          99
        ],
        [
          "$4^{\\text {th }}$ test",
          367,
          103,
          250,
          58
        ],
        [
          "$5^{\\text {th }}$ test",
          296,
          94,
          69,
          251
        ]
      ],
      "row_count": 5,
      "column_count": 5
    },
    {
      "table_number": null,
      "table_title": null,
      "headers": [
        "",
        "$\\mathrm{NM}^{\\mathrm{b}}$",
        "$\\mathrm{ODR}^{\\mathrm{c}}$",
        "$\\mathrm{DDR}^{\\mathrm{c}}$",
        "$\\mathrm{MDR}^{\\mathrm{c}}$"
      ],
      "rows": [
        [
          "$1^{\\text {st }}$ test",
          54,
          144,
          72,
          61
        ],
        [
          "$2^{\\text {nd }}$ test",
          55,
          74,
          63,
          57
        ],
        [
          "$3^{\\text {rd }}$ test",
          50,
          178,
          70,
          65
        ],
        [
          "$4^{\\text {th }}$ test",
          51,
          135,
          77,
          96
        ],
        [
          "$5^{\\text {th }}$ test",
          49,
          111,
          67,
          70
        ]
      ],
      "row_count": 5,
      "column_count": 5
    },
    {
      "table_number": null,
      "table_title": null,
      "headers": [
        "",
        "$\\mathrm{NM}^{\\mathrm{b}}$",
        "$\\mathrm{ODR}^{\\mathrm{c}}$",
        "$\\mathrm{DDR}^{\\mathrm{c}}$",
        "$\\mathrm{MDR}^{\\mathrm{c}}$"
      ],
      "rows": [
        [
          "$1^{\\text {st }}$ test",
          167.73,
          194.4,
          196,
          195.6
        ],
        [
          "$2^{\\text {nd }}$ test",
          178.3,
          198.2,
          198.62,
          192.1
        ],
        [
          "$3^{\\text {rd }}$ test",
          171.1,
          199.5,
          203.44,
          194.2
        ],
        [
          "$4^{\\text {th }}$ test",
          167.1,
          200.23,
          198.54,
          202.8
        ],
        [
          "$5^{\\text {th }}$ test",
          174.83,
          189.36,
          190.4,
          189.7
        ]
      ],
      "row_count": 5,
      "column_count": 5
    },
    {
      "table_number": null,
      "table_title": null,
      "headers": [
        "",
        "$\\mathrm{NM}^{\\mathrm{b}}$",
        "$\\mathrm{ODR}^{\\mathrm{c}}$",
        "$\\mathrm{DDR}^{\\mathrm{c}}$",
        "$\\mathrm{MDR}^{\\mathrm{c}}$"
      ],
      "rows": [
        [
          "$1^{\\text {st }}$ test",
          174.65,
          198.8,
          201.36,
          200.54
        ],
        [
          "$2^{\\text {nd }}$ test",
          170.33,
          198.2,
          200.71,
          200.76
        ],
        [
          "$3^{\\text {rd }}$ test",
          171.72,
          200.76,
          196.41,
          201.6
        ],
        [
          "$4^{\\text {th }}$ test",
          177.25,
          198.77,
          199.12,
          199.72
        ],
        [
          "$5^{\\text {th }}$ test",
          182.84,
          195.06,
          195.69,
          194.84
        ]
      ],
      "row_count": 5,
      "column_count": 5
    },
    {
      "table_number": null,
      "table_title": "Table (a) and (c) show that the convergence time of standard GAs without migration is long. The best convergence generation is 302 and worst 727 . Meanwhile, the convergence values are bad, between 167.7 and 174.8. The convergence efficiency has been improved much when island-based model is adopted, with the best convergence generation 58, best convergence value 203.44 and worst convergence value 192.1. This is consistent with $[2,4]$. The difference of convergence efficiency is insignificant when employing different migration methods. Moreover, we find that convergence efficiency and values are not stable when using standard GAs. For instance, the best convergence generation is 58 , but the worst is 920 using MDR migration strategy. For convergence values, the best is 203.44 , but worst is 192.1 . On the other hand, table (b) and (d) show that convergence is very quick in EDA without migration. Generally, the convergence generation is about 50. The convergence values have been improved much compared to standard GAs. When PEDA is adopted, the convergence generation is stable for five tests regardless of migration strategies. The average convergence generation is around 100 and the convergence values are almost above 198. On the whole, PEDA performs better than standard EDA and PGAs on convergence efficiency. In PEDA, MDR strategy is the best among all migration strategies; as table (d) shows global optimal solution 204.8 can be gained three times in five tests.",
      "headers": [
        "",
        "VALUE AND GENERATIONS OF CONVERGENCE WITH $r^{2}$",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      "rows": [
        [
          "$r$",
          0.3,
          0.4,
          0.5,
          0.6,
          0.7,
          0.8,
          0.9
        ],
        [
          "$\\mathrm{CV}^{2}$",
          204.08,
          204.08,
          204.08,
          204.08,
          204.08,
          204.08,
          204.08
        ],
        [
          "$\\mathrm{CG}^{2}$",
          54,
          51,
          53,
          52,
          65,
          64,
          82
        ],
        [
          12808,
          "",
          "",
          "",
          "",
          "",
          "",
          ""
        ]
      ],
      "row_count": 4,
      "column_count": 8
    },
    {
      "table_number": null,
      "table_title": null,
      "headers": [
        "",
        "CPU EXECUTING TIME WITH DIFFERENT popSize",
        "",
        "",
        "",
        "",
        ""
      ],
      "rows": [
        [
          "popSize",
          160,
          "",
          320,
          "",
          640,
          1280
        ],
        [
          "* running environment: Xeon 2.7 GHz , memory 1G DDR 400 Linux 2.4.21",
          "",
          "",
          "",
          "",
          "",
          ""
        ]
      ],
      "row_count": 2,
      "column_count": 7
    }
  ]
}